{"version":3,"sources":["map-with-zones/utils/constants.js","map-with-zones/componets/input-radius.jsx","map-with-zones/componets/popup.jsx","map-with-zones/componets/popup-button.jsx","map-with-zones/componets/radius-popup.jsx","map-with-zones/layers/marker-layer.js","map-with-zones/utils/zone-helpers.js","map-with-zones/layers/radius-stroke-layer.js","map-with-zones/layers/radius-layer.js","map-with-zones/utils/api-helpers.js","map-with-zones/api/user-api.js","map-with-zones/componets/zone-table.jsx","map-with-zones/controls/user-controll.js","map-with-zones/layers/zone-stroke-layer.js","map-with-zones/layers/zone-name-layer.js","map-with-zones/layers/zone-layer.js","map-with-zones/utils/map-helpers.js","map-with-zones/utils/dom-helpers.js","map-with-zones/api/zone-api.js","map-with-zones/componets/input-name.jsx","map-with-zones/componets/input-color.jsx","map-with-zones/componets/edit-popup.jsx","map-with-zones/componets/create-popup.jsx","map-with-zones/componets/popup-title.jsx","map-with-zones/componets/delete-popup.jsx","map-with-zones/layers/draw-layer.js","map-with-zones/controls/admin-controll.js","map-with-zones/utils/svg-helpers.js","map-with-zones/controls/zone-controll.js","map-with-zones/index.jsx","App.js","serviceWorker.js","index.js"],"names":["MAP_ID","CONTROL_BUTTON_CLASS_NAME","CONTROL_BUTTON_ACTIVE_CLASS_NAME","POPUP_BUTTON_CLASS_NAME","POPUP_INPUT_CLASS_NAME","POPUP_LABEL_CLASS_NAME","POPUP_TITLE_CLASS_NAME","POPUP_COLOR_CLASS_NAME","POPUP_CONTROLS_CLASS_NAME","TABLE_TITLE_CLASS_NAME","TABLE_ZONES_CLASS_NAME","InputRadius","radius","onChange","htmlFor","className","type","id","defaultValue","Popup","children","PopupButton","text","onClick","RadiusPopup","onChangeRadius","onClickSelect","MarkerLayerEvents","MarkerLayer","map","radiusInputId","radiusButtonId","onInputChange","e","fire","Number","target","value","onDragEnd","lngLat","marker","getLngLat","onButtonClick","mapboxgl","Marker","draggable","popupContainer","document","createElement","popup","closeButton","closeOnClick","closeOnMove","setDOMContent","this","remove","coor","setLngLat","toArray","setPopup","addTo","togglePopup","on","ReactDOM","render","Evented","getCenterZoneByCoordinates","coordinates","simlified","getDrawingLine","turf","getCenterZoneCoorByCoordinates","center","length","line","tolerance","highQuality","RadiusStrokeLayer","layerId","sourceId","addSource","addLayer","data","circle","getLineByRadius","source","getSource","setData","gerLayer","layout","paint","removeLayer","removeSource","getLayer","RadiusLayer","strokeLayer","update","getCircleByRadius","pause","a","Promise","resolve","setTimeout","UserApi","info","console","log","ZoneTable","zones","itHasPoint","zone","key","name","UserControll","zoneControll","userApi","sendInfoAboutIncludedZones","onRadiusChanged","updateRadiusLayer","findZonesInRadius","onDragEndMarker","onMapClick","markerLayer","updateUserTable","container","table","mapElement","getElementById","appendChild","enableUserMode","disableUserMode","parentNode","removeChild","undefined","radiusLayer","off","removeUserTable","once","unmountComponentAtNode","intersectedZones","getZoneList","filter","point","isZoneIntersected","el","ZoneStrokeLayer","options","color","setPaintProperty","geometry","polygon","getZoneLineByCoordinates","ZoneNameLayer","setLayoutProperty","minzoom","ZoneLayer","nameLayer","isEdit","updateName","setColor","features","getZonePolygonByCoordinates","enableMapInteraction","dragPan","enable","boxZoom","scrollZoom","dragRotate","doubleClickZoom","touchZoomRotate","touchPitch","disableMapInteraction","disable","setDefaultCursor","getCanvas","style","cursor","resetCursor","createControllButton","content","callback","button","innerHTML","addEventListener","removeActiveClassForButton","classList","contains","addActiveClassForButton","add","ZoneApi","localStoragekey","localStorage","getItem","JSON","parse","newZones","push","string","stringify","setItem","InputName","InputColor","EditPopup","onChangeName","onChangeColor","onClickEdit","onClickSave","onClickCancel","CreatePopup","PopupTitle","title","DeletePopup","onClickDelete","DrawLayer","AdminControll","isCreateMode","isEditMode","isDeleteMode","deleteZoneId","editZoneId","cacheZone","newZone","zoneLayerPatternId","onClickEditButton","disableEditMode","disableAllModes","enableEditMode","onMouseUpEdit","onMouseMoveEdit","editZone","showEditPopup","drawEditLayer","updateZoneCoordinates","addCursorPointerListener","updateEditZoneLayer","onMouseDownEdit","onGeometryEdit","editPopup","removeCursorPointerListener","removeZoneLayer","cancelEditZone","drawZones","onSaveEdit","updateZone","editZoneColor","updateZoneColor","editZoneName","feature","getZoneFeatureByEvent","zoneId","properties","getZoneById","_","cloneDeep","editButton","onClickCreateButton","disableCreateMode","enableCreateMode","createPopup","newZonelayer","drawlayer","createButton","setNewZoneName","setNewZoneColor","updateColorInNewZone","createZone","onMouseUpCreate","onMouseMoveCreate","showCreatePopup","updateNewZoneLayer","onMouseDownCreate","cancelDeleteZone","deletePopup","deleteZone","onClickDeleteZone","showDeletePopup","onClickDeleteButton","disableDeleteMode","enableDeletetingMode","cursorListener","zoneApi","deleteButton","Date","now","toString","Math","random","substr","getNewZoneName","queryRenderedFeatures","shift","layer","match","ZoneControll","layers","Map","init","get","delete","addZone","find","forEach","existLayer","set","Cities","Bengaluru","LngLat","MapWithZones","props","mapStyle","mapToken","isAdmin","cityCoor","accessToken","zoom","addControl","userControll","adminControll","prevProps","removeControl","React","Component","App","useState","setIsAdmin","process","Boolean","window","location","hostname","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.716d3a1c.chunk.js","sourcesContent":["export const DEFAULT_ZONE_LAYER_COLOR = \"#008888\";\r\nexport const DEFAULT_RADIUS_LAYER_COLOR = \"#292828\";\r\nexport const MAP_ID = \"mapbox-container-element-id\";\r\nexport const CONTROL_BASE_CLASS_NAME = \"map-controll\";\r\nexport const CONTROL_BUTTON_CLASS_NAME = `${CONTROL_BASE_CLASS_NAME}__button`;\r\nexport const CONTROL_BUTTON_ACTIVE_CLASS_NAME = `${CONTROL_BUTTON_CLASS_NAME}_active`;\r\nexport const POPUP_BASE_CLASS_NAME = \"map-popup\";\r\nexport const POPUP_BUTTON_CLASS_NAME = `${POPUP_BASE_CLASS_NAME}__button`;\r\nexport const POPUP_INPUT_CLASS_NAME = `${POPUP_BASE_CLASS_NAME}__input`;\r\nexport const POPUP_LABEL_CLASS_NAME = `${POPUP_BASE_CLASS_NAME}__label`;\r\nexport const POPUP_TITLE_CLASS_NAME = `${POPUP_BASE_CLASS_NAME}__title`;\r\nexport const POPUP_COLOR_CLASS_NAME = `${POPUP_BASE_CLASS_NAME}__color`;\r\nexport const POPUP_CONTROLS_CLASS_NAME = `${POPUP_BASE_CLASS_NAME}__controls`;\r\nexport const TABLE_BASE_CLASS_NAME = \"map-table\";\r\nexport const TABLE_TITLE_CLASS_NAME = `${TABLE_BASE_CLASS_NAME}__title`;\r\nexport const TABLE_ZONES_CLASS_NAME = `${TABLE_BASE_CLASS_NAME}__zones`;\r\n","import React from \"react\";\r\nimport { POPUP_LABEL_CLASS_NAME, POPUP_INPUT_CLASS_NAME } from \"../utils/constants\";\r\n\r\nexport const InputRadius = ({ radius, onChange }) => {\r\n    return (\r\n        <>\r\n            <label htmlFor=\"popup-input-radius\" className={POPUP_LABEL_CLASS_NAME}>\r\n                Enter radius (km):\r\n            </label>\r\n            <br />\r\n            <input\r\n                type=\"number\"\r\n                id=\"popup-input-radius\"\r\n                defaultValue={radius || 0}\r\n                className={POPUP_INPUT_CLASS_NAME}\r\n                onChange={onChange}\r\n            />\r\n            <br />\r\n        </>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { POPUP_BASE_CLASS_NAME } from \"../utils/constants\";\r\n\r\nexport const Popup = ({ children }) => {\r\n    return <div className={POPUP_BASE_CLASS_NAME}>{children}</div>;\r\n};\r\n","import React from \"react\";\r\nimport { POPUP_BUTTON_CLASS_NAME } from \"../utils/constants\";\r\n\r\nexport const PopupButton = ({ text, onClick }) => {\r\n    return (\r\n        <button className={POPUP_BUTTON_CLASS_NAME} onClick={onClick} type=\"button\">\r\n            {text || \" \"}\r\n        </button>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { InputRadius } from \"./input-radius\";\r\nimport { Popup } from \"./popup\";\r\nimport { PopupButton } from \"./popup-button\";\r\nimport { POPUP_CONTROLS_CLASS_NAME } from \"../utils/constants\";\r\n\r\nexport const RadiusPopup = ({ radius, onChangeRadius, onClickSelect }) => {\r\n    return (\r\n        <Popup>\r\n            <InputRadius radius={radius} onChange={onChangeRadius} />\r\n            <div className={POPUP_CONTROLS_CLASS_NAME}>\r\n                <PopupButton text=\"Select\" onClick={onClickSelect} />\r\n            </div>\r\n        </Popup>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport mapboxgl from \"mapbox-gl\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { RadiusPopup } from \"../componets/radius-popup\";\r\n\r\nexport const MarkerLayerEvents = {\r\n    dragend: \"dragend\",\r\n    radiusChanged: \"radiusChanged\",\r\n    buttonClick: \"buttonClick\",\r\n};\r\n\r\nexport class MarkerLayer extends mapboxgl.Evented {\r\n    radiusInputId = \"marker-input-radius\";\r\n    radiusButtonId = \"marker-button-radius\";\r\n\r\n    /**\r\n     *\r\n     * @param {mapboxgl.Map} map\r\n     */\r\n    constructor(map) {\r\n        super();\r\n        this.map = map;\r\n\r\n        /** @type{mapboxgl.Marker} */\r\n        this.marker = new mapboxgl.Marker({\r\n            draggable: true,\r\n        });\r\n\r\n        this.popupContainer = document.createElement(\"div\");\r\n        /** @type{mapboxgl.Popup} */\r\n        this.popup = new mapboxgl.Popup({ closeButton: false, closeOnClick: false, closeOnMove: false }).setDOMContent(\r\n            this.popupContainer,\r\n        );\r\n    }\r\n\r\n    remove() {\r\n        if (this.marker) this.marker.remove();\r\n        if (this.popup) this.popup.remove();\r\n    }\r\n\r\n    /**\r\n     * @param {mapboxgl.LngLat} coor\r\n     */\r\n    update(coor) {\r\n        this.marker.setLngLat(coor.toArray());\r\n        this.marker.setPopup(this.popup);\r\n        this.marker.addTo(this.map);\r\n        this.marker.togglePopup();\r\n        this.marker.on(\"dragend\", this.onDragEnd);\r\n        ReactDOM.render(\r\n            <RadiusPopup radius={1} onChangeRadius={this.onInputChange} onClickSelect={this.onButtonClick} />,\r\n            this.popupContainer,\r\n        );\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {import(\"react\").ChangeEvent<HTMLInputElement>} e\r\n     */\r\n    onInputChange = (e) => {\r\n        this.fire(MarkerLayerEvents.radiusChanged, { radius: Number(e.target.value) });\r\n    };\r\n\r\n    onDragEnd = () => {\r\n        const lngLat = this.marker.getLngLat();\r\n        this.fire(MarkerLayerEvents.dragend, { lngLat });\r\n    };\r\n\r\n    onButtonClick = () => {\r\n        this.fire(MarkerLayerEvents.buttonClick);\r\n    };\r\n}\r\n","import * as turf from \"@turf/turf\";\r\nimport { DEFAULT_ZONE_LAYER_COLOR } from \"./constants\";\r\n\r\nexport function generateUniqueId() {\r\n    return Date.now().toString(36) + Math.random().toString(36).substr(2);\r\n}\r\n\r\nexport function getDefaultZone() {\r\n    return {\r\n        name: \"\",\r\n        color: DEFAULT_ZONE_LAYER_COLOR,\r\n        id: null,\r\n        coordinates: [],\r\n    };\r\n}\r\n\r\nexport function getDefaultUserData() {\r\n    return {\r\n        lngLat: null,\r\n        radius: 1,\r\n        zones: [],\r\n    };\r\n}\r\n\r\nexport function getCenterZoneByCoordinates(coordinates) {\r\n    const simlified = getDrawingLine(coordinates);\r\n    if (!simlified) return;\r\n    const center = turf.center(simlified);\r\n    return center;\r\n}\r\n\r\nexport function getCenterZoneCoorByCoordinates(coordinates) {\r\n    const center = getCenterZoneByCoordinates(coordinates);\r\n    if (!center) return;\r\n    const coor = turf.getCoord(center);\r\n    return coor;\r\n}\r\n\r\nexport function getZonePolygonByCoordinates(coordinates, id) {\r\n    const line = getDrawingLine(coordinates, id);\r\n    if (!line || line.geometry.coordinates.length < 4) return;\r\n    let polygon = turf.lineToPolygon(line);\r\n    const kinks = turf.kinks(polygon);\r\n    if (kinks.features.length) {\r\n        polygon = turf.unkinkPolygon(polygon);\r\n    }\r\n    return polygon;\r\n}\r\n\r\nexport function getZoneLineByCoordinates(coordinates, id) {\r\n    const simlified = getDrawingLine(coordinates, id);\r\n    if (!simlified || simlified.geometry.coordinates.length < 4) return;\r\n    const polygon = turf.lineToPolygon(simlified);\r\n    const polygonedLine = turf.polygonToLine(polygon);\r\n    return polygonedLine;\r\n}\r\n\r\nexport function getDrawingLine(coordinates, id) {\r\n    if (coordinates.length < 2) return;\r\n    const line = turf.lineString(coordinates, { id });\r\n    const simlified = turf.cleanCoords(turf.simplify(line, { tolerance: 0.00001, highQuality: true }));\r\n    return simlified;\r\n}\r\n\r\nexport function getCircleByRadius(center, radius) {\r\n    return turf.circle(center.toArray(), radius);\r\n}\r\n\r\nexport function getLineByRadius(center, radius) {\r\n    if (!center || !radius) return;\r\n    const circle = turf.circle(center.toArray(), radius);\r\n    return turf.polygonToLine(circle);\r\n}\r\n\r\nexport function isZoneIntersected(radius, center, coordinates) {\r\n    if (coordinates.length < 2) return;\r\n    const line = turf.lineString(coordinates);\r\n    const point = turf.point(center.toArray());\r\n    const distance = turf.pointToLineDistance(point, line);\r\n    return distance <= radius;\r\n}\r\n","import { getLineByRadius } from \"../utils/zone-helpers\";\r\nimport { DEFAULT_RADIUS_LAYER_COLOR } from \"../utils/constants\";\r\n\r\nexport class RadiusStrokeLayer {\r\n    /**\r\n     * @param {mapboxgl.Map} map\r\n     * @param {string} id\r\n     */\r\n    constructor(map) {\r\n        this.map = map;\r\n        this.layerId = `radius-stroke-layer`;\r\n        this.sourceId = `radius-stroke-source`;\r\n    }\r\n\r\n    update(radius, coor) {\r\n        this.addSource(radius, coor);\r\n        this.addLayer();\r\n    }\r\n\r\n    addSource(radius, coor) {\r\n        const data = getLineByRadius(coor, radius);\r\n        if (!data) return;\r\n\r\n        const source = this.getSource();\r\n        if (source) {\r\n            return source.setData(data);\r\n        }\r\n\r\n        this.map.addSource(this.sourceId, { type: \"geojson\", data });\r\n    }\r\n\r\n    addLayer() {\r\n        if (this.gerLayer() || !this.getSource()) return;\r\n\r\n        this.map.addLayer({\r\n            id: this.layerId,\r\n            source: this.sourceId,\r\n            type: \"line\",\r\n            layout: {\r\n                \"line-join\": \"round\",\r\n                \"line-cap\": \"round\",\r\n            },\r\n            paint: {\r\n                \"line-color\": DEFAULT_RADIUS_LAYER_COLOR,\r\n                \"line-width\": [\"interpolate\", [\"exponential\", 1.5], [\"zoom\"], 5, 1, 16, 6],\r\n                \"line-dasharray\": [5, 3],\r\n            },\r\n        });\r\n    }\r\n\r\n    remove() {\r\n        if (this.gerLayer()) this.map.removeLayer(this.layerId);\r\n        if (this.getSource()) this.map.removeSource(this.sourceId);\r\n    }\r\n\r\n    getSource() {\r\n        return this.map.getSource(this.sourceId);\r\n    }\r\n\r\n    gerLayer() {\r\n        return this.map.getLayer(this.layerId);\r\n    }\r\n}\r\n","import { getCircleByRadius } from \"../utils/zone-helpers\";\r\nimport { DEFAULT_RADIUS_LAYER_COLOR } from \"../utils/constants\";\r\nimport { RadiusStrokeLayer } from \"./radius-stroke-layer\";\r\n\r\nexport class RadiusLayer {\r\n    layerId = \"radius-layer\";\r\n    sourceId = \"radius-source\";\r\n\r\n    /**\r\n     *\r\n     * @param {mapboxgl.Map} map\r\n     */\r\n    constructor(map) {\r\n        this.map = map;\r\n        this.strokeLayer = new RadiusStrokeLayer(map);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {number} radius\r\n     * @param {mapboxgl.LngLat} coor\r\n     */\r\n    update(radius, coor) {\r\n        if (radius > 0) {\r\n            this.addSource(radius, coor);\r\n            this.addLayer();\r\n            this.strokeLayer.update(radius, coor);\r\n        } else {\r\n            this.remove();\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {number} radius\r\n     * @param {mapboxgl.LngLat} coor\r\n     */\r\n    addSource(radius, coor) {\r\n        const source = this.getSource();\r\n        const data = getCircleByRadius(coor, radius);\r\n        if (source) {\r\n            source.setData(data);\r\n        } else {\r\n            this.map.addSource(this.sourceId, { type: \"geojson\", data });\r\n        }\r\n    }\r\n\r\n    addLayer() {\r\n        if (this.gerLayer()) return;\r\n\r\n        this.map.addLayer({\r\n            id: this.layerId,\r\n            source: this.sourceId,\r\n            type: \"fill\",\r\n            paint: {\r\n                \"fill-color\": DEFAULT_RADIUS_LAYER_COLOR,\r\n                \"fill-opacity\": 0.4,\r\n            },\r\n        });\r\n    }\r\n\r\n    remove() {\r\n        if (this.gerLayer()) this.map.removeLayer(this.layerId);\r\n        if (this.getSource()) this.map.removeSource(this.sourceId);\r\n        this.strokeLayer.remove();\r\n    }\r\n\r\n    getSource() {\r\n        return this.map.getSource(this.sourceId);\r\n    }\r\n\r\n    gerLayer() {\r\n        return this.map.getLayer(this.layerId);\r\n    }\r\n}\r\n","export async function pause() {\r\n    return new Promise((resolve) => {\r\n        setTimeout(() => {\r\n            resolve();\r\n        }, 100);\r\n    });\r\n}\r\n","import { pause } from \"../utils/api-helpers\";\r\n\r\nexport class UserApi {\r\n    async sendInfoAboutIncludedZones(info) {\r\n        await pause();\r\n        console.log(info);\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { TABLE_BASE_CLASS_NAME, TABLE_TITLE_CLASS_NAME, TABLE_ZONES_CLASS_NAME } from \"../utils/constants\";\r\n\r\nexport const ZoneTable = ({ zones, itHasPoint }) => {\r\n    const getContent = () => {\r\n        if (!itHasPoint) {\r\n            return <span className={TABLE_TITLE_CLASS_NAME}>Set point on the map</span>;\r\n        }\r\n        if (!zones.length) {\r\n            return <span className={TABLE_TITLE_CLASS_NAME}>No zones in the radius</span>;\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <span className={TABLE_TITLE_CLASS_NAME}>You have selected the following zones:</span>\r\n                <div className={TABLE_ZONES_CLASS_NAME}>\r\n                    {zones.map((zone) => (\r\n                        <span key={zone.id}>{zone.name}</span>\r\n                    ))}\r\n                </div>\r\n            </>\r\n        );\r\n    };\r\n\r\n    return <div className={TABLE_BASE_CLASS_NAME}>{getContent()}</div>;\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { MarkerLayer, MarkerLayerEvents } from \"../layers/marker-layer\";\r\nimport { RadiusLayer } from \"../layers/radius-layer\";\r\nimport { getDefaultUserData, isZoneIntersected } from \"../utils/zone-helpers\";\r\nimport { UserApi } from \"../api/user-api\";\r\nimport { MAP_ID } from \"../utils/constants\";\r\nimport { ZoneTable } from \"../componets/zone-table\";\r\n\r\nexport class UserControll {\r\n    data = getDefaultUserData();\r\n    itHasPoint = false;\r\n\r\n    /**\r\n     * @param {import('./zone-controll').ZoneControll} zoneControll\r\n     */\r\n    constructor(zoneControll) {\r\n        this.zoneControll = zoneControll;\r\n        this.userApi = new UserApi();\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {mapboxgl.Map} map\r\n     */\r\n    onAdd(map) {\r\n        this.map = map;\r\n        this.container = document.createElement(\"div\");\r\n        this.container.className = \"mapboxgl-ctrl\";\r\n        this.table = document.createElement(\"div\");\r\n        const mapElement = document.getElementById(MAP_ID);\r\n        if (mapElement) mapElement.appendChild(this.table);\r\n        this.enableUserMode();\r\n        return this.container;\r\n    }\r\n\r\n    onRemove() {\r\n        this.disableUserMode();\r\n        this.table.parentNode.removeChild(this.table);\r\n        this.container.parentNode.removeChild(this.container);\r\n        this.data = getDefaultUserData();\r\n        this.itHasPoint = false;\r\n        this.map = undefined;\r\n    }\r\n\r\n    disableUserMode() {\r\n        if (this.markerLayer) this.markerLayer.remove();\r\n        if (this.radiusLayer) this.radiusLayer.remove();\r\n        this.map.off(\"click\", this.onMapClick);\r\n        this.removeUserTable();\r\n    }\r\n\r\n    enableUserMode() {\r\n        this.markerLayer = new MarkerLayer(this.map);\r\n        this.radiusLayer = new RadiusLayer(this.map);\r\n        this.markerLayer.on(MarkerLayerEvents.dragend, this.onDragEndMarker);\r\n        this.markerLayer.on(MarkerLayerEvents.radiusChanged, this.onRadiusChanged);\r\n        this.markerLayer.on(MarkerLayerEvents.buttonClick, this.onButtonClick);\r\n        this.map.once(\"click\", this.onMapClick);\r\n        this.updateUserTable();\r\n    }\r\n\r\n    updateUserTable() {\r\n        ReactDOM.render(<ZoneTable itHasPoint={this.itHasPoint} zones={this.data.zones} />, this.table);\r\n    }\r\n\r\n    removeUserTable() {\r\n        ReactDOM.unmountComponentAtNode(this.table);\r\n    }\r\n\r\n    onButtonClick = async () => {\r\n        await this.userApi.sendInfoAboutIncludedZones(this.data);\r\n    };\r\n\r\n    findZonesInRadius() {\r\n        if (!this.data.lngLat || !this.data.radius) {\r\n            this.data.zones = [];\r\n            this.updateUserTable();\r\n            return;\r\n        }\r\n        const zones = this.zoneControll.getZoneList();\r\n        const intersectedZones = zones.filter((zone) =>\r\n            isZoneIntersected(this.data.radius, this.data.lngLat, zone.coordinates),\r\n        );\r\n        this.data.zones = intersectedZones.map((el) => ({ name: el.name, id: el.id }));\r\n        this.updateUserTable();\r\n    }\r\n\r\n    onRadiusChanged = ({ radius }) => {\r\n        this.data.radius = radius;\r\n        this.updateRadiusLayer();\r\n        this.findZonesInRadius();\r\n    };\r\n\r\n    onDragEndMarker = ({ lngLat }) => {\r\n        this.data.lngLat = lngLat;\r\n        this.updateRadiusLayer();\r\n        this.findZonesInRadius();\r\n    };\r\n\r\n    updateRadiusLayer() {\r\n        if (!this.data.lngLat) return;\r\n        this.radiusLayer.update(this.data.radius, this.data.lngLat);\r\n    }\r\n\r\n    /**\r\n     * @param {mapboxgl.MapMouseEvent & mapboxgl.EventData} e\r\n     */\r\n    onMapClick = (e) => {\r\n        this.markerLayer.update(e.lngLat);\r\n        this.data.lngLat = e.lngLat;\r\n        this.itHasPoint = true;\r\n        this.findZonesInRadius();\r\n        this.updateRadiusLayer();\r\n        this.updateUserTable();\r\n    };\r\n}\r\n","import { DEFAULT_ZONE_LAYER_COLOR } from \"../utils/constants\";\r\nimport { getZoneLineByCoordinates } from \"../utils/zone-helpers\";\r\n\r\nexport class ZoneStrokeLayer {\r\n    /**\r\n     *\r\n     * @param {mapboxgl.Map} map\r\n     * @param {string} id\r\n     */\r\n    constructor(map, id, options) {\r\n        const color = (options && options.color) || DEFAULT_ZONE_LAYER_COLOR;\r\n        this.map = map;\r\n        this.layerId = `zone-stroke-layer-${id}`;\r\n        this.sourceId = `zone-stroke-source-${id}`;\r\n        this.id = id;\r\n        this.color = color;\r\n    }\r\n\r\n    update(coordinates) {\r\n        this.addSource(coordinates);\r\n        this.addLayer();\r\n    }\r\n\r\n    setColor(color) {\r\n        this.color = color;\r\n        this.map.setPaintProperty(this.layerId, \"line-color\", color);\r\n    }\r\n\r\n    addSource(coordinates) {\r\n        const data = getZoneLineByCoordinates(coordinates, this.id);\r\n        if (!data) return;\r\n\r\n        const source = this.getSource();\r\n        if (source) {\r\n            return source.setData(data);\r\n        }\r\n\r\n        this.map.addSource(this.sourceId, { type: \"geojson\", data });\r\n    }\r\n\r\n    addLayer() {\r\n        if (this.gerLayer() || !this.getSource()) return;\r\n\r\n        this.map.addLayer({\r\n            id: this.layerId,\r\n            source: this.sourceId,\r\n            type: \"line\",\r\n            layout: {\r\n                \"line-join\": \"round\",\r\n                \"line-cap\": \"round\",\r\n            },\r\n            paint: {\r\n                \"line-color\": this.color,\r\n                \"line-width\": [\"interpolate\", [\"exponential\", 1.5], [\"zoom\"], 5, 1, 16, 6],\r\n            },\r\n        });\r\n    }\r\n\r\n    remove() {\r\n        if (this.gerLayer()) this.map.removeLayer(this.layerId);\r\n        if (this.getSource()) this.map.removeSource(this.sourceId);\r\n    }\r\n\r\n    getSource() {\r\n        return this.map.getSource(this.sourceId);\r\n    }\r\n\r\n    gerLayer() {\r\n        return this.map.getLayer(this.layerId);\r\n    }\r\n}\r\n","import { getCenterZoneByCoordinates } from \"../utils/zone-helpers\";\r\n\r\nexport class ZoneNameLayer {\r\n    /**\r\n     * @param {mapboxgl.Map} map\r\n     * @param {string} id\r\n     */\r\n    constructor(map, id, options) {\r\n        this.name = options && options.name ? options.name : \" \";\r\n        this.map = map;\r\n        this.layerId = `zone-name-layer-${id}`;\r\n        this.sourceId = `zone-name-source-${id}`;\r\n        this.id = id;\r\n    }\r\n\r\n    updateName(name) {\r\n        this.name = name;\r\n        this.map.setLayoutProperty(this.layerId, \"text-field\", name);\r\n    }\r\n\r\n    update(coordinates) {\r\n        this.addSource(coordinates);\r\n        this.addLayer();\r\n    }\r\n\r\n    addSource(coordinates) {\r\n        const data = getCenterZoneByCoordinates(coordinates);\r\n        if (!data) return;\r\n\r\n        const source = this.getSource();\r\n        if (source) {\r\n            return source.setData(data);\r\n        }\r\n\r\n        this.map.addSource(this.sourceId, { type: \"geojson\", data });\r\n    }\r\n\r\n    addLayer() {\r\n        if (this.gerLayer() || !this.getSource()) return;\r\n\r\n        this.map.addLayer({\r\n            id: this.layerId,\r\n            source: this.sourceId,\r\n            minzoom: 12,\r\n            type: \"symbol\",\r\n            layout: {\r\n                \"text-field\": this.name,\r\n                \"text-size\": [\"interpolate\", [\"exponential\", 1.5], [\"zoom\"], 12, 12, 18, 46],\r\n            },\r\n            paint: {\r\n                \"text-color\": \"white\",\r\n            },\r\n        });\r\n    }\r\n\r\n    remove() {\r\n        if (this.gerLayer()) this.map.removeLayer(this.layerId);\r\n        if (this.getSource()) this.map.removeSource(this.sourceId);\r\n    }\r\n\r\n    getSource() {\r\n        return this.map.getSource(this.sourceId);\r\n    }\r\n\r\n    gerLayer() {\r\n        return this.map.getLayer(this.layerId);\r\n    }\r\n}\r\n","import { getZonePolygonByCoordinates } from \"../utils/zone-helpers\";\r\nimport { DEFAULT_ZONE_LAYER_COLOR } from \"../utils/constants\";\r\nimport { ZoneStrokeLayer } from \"./zone-stroke-layer\";\r\nimport { ZoneNameLayer } from \"./zone-name-layer\";\r\n\r\nexport class ZoneLayer {\r\n    /**\r\n     * @param {mapboxgl.Map} map\r\n     * @param {string} id\r\n     */\r\n    constructor(map, id, options) {\r\n        this.map = map;\r\n        this.layerId = `zone-layer-${id}`;\r\n        this.sourceId = `zone-source-${id}`;\r\n        this.id = id;\r\n        this.color = (options && options.color) || DEFAULT_ZONE_LAYER_COLOR;\r\n        this.strokeLayer = new ZoneStrokeLayer(map, id, options);\r\n        this.nameLayer = new ZoneNameLayer(map, id, options);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {number} radius\r\n     * @param {mapboxgl.LngLat} coor\r\n     */\r\n    update(coordinates, isEdit = false) {\r\n        this.addSource(coordinates);\r\n        this.addLayer();\r\n        this.strokeLayer.update(coordinates);\r\n        if (!isEdit) this.nameLayer.update(coordinates);\r\n    }\r\n\r\n    updateName(name) {\r\n        this.nameLayer.updateName(name);\r\n    }\r\n\r\n    setColor(color) {\r\n        this.color = color;\r\n        this.map.setPaintProperty(this.layerId, \"fill-color\", color);\r\n        this.strokeLayer.setColor(color);\r\n    }\r\n\r\n    /**\r\n     * @param {number} radius\r\n     * @param {mapboxgl.LngLat} coor\r\n     */\r\n    addSource(coordinates) {\r\n        const data = getZonePolygonByCoordinates(coordinates, this.id);\r\n        if (!data) return;\r\n\r\n        const source = this.getSource();\r\n        if (source) {\r\n            return source.setData(data);\r\n        }\r\n\r\n        this.map.addSource(this.sourceId, { type: \"geojson\", data });\r\n    }\r\n\r\n    addLayer() {\r\n        if (this.gerLayer() || !this.getSource()) return;\r\n\r\n        this.map.addLayer({\r\n            id: this.layerId,\r\n            source: this.sourceId,\r\n            type: \"fill\",\r\n            layout: {},\r\n            paint: {\r\n                \"fill-color\": this.color,\r\n                \"fill-opacity\": 0.5,\r\n                \"fill-outline-color\": \"transparent\",\r\n            },\r\n        });\r\n    }\r\n\r\n    remove() {\r\n        if (this.gerLayer()) this.map.removeLayer(this.layerId);\r\n        if (this.getSource()) this.map.removeSource(this.sourceId);\r\n        this.strokeLayer.remove();\r\n        this.nameLayer.remove();\r\n    }\r\n\r\n    getSource() {\r\n        return this.map.getSource(this.sourceId);\r\n    }\r\n\r\n    gerLayer() {\r\n        return this.map.getLayer(this.layerId);\r\n    }\r\n}\r\n","export function enableMapInteraction(map) {\r\n    if (!map) return;\r\n    map.dragPan.enable();\r\n    map.boxZoom.enable();\r\n    map.scrollZoom.enable();\r\n    map.dragRotate.enable();\r\n    map.doubleClickZoom.enable();\r\n    map.touchZoomRotate.enable();\r\n    map.touchPitch.enable();\r\n}\r\n\r\nexport function disableMapInteraction(map) {\r\n    if (!map) return;\r\n    map.dragPan.disable();\r\n    map.boxZoom.disable();\r\n    map.scrollZoom.disable();\r\n    map.dragRotate.disable();\r\n    map.doubleClickZoom.disable();\r\n    map.touchZoomRotate.disable();\r\n    map.touchPitch.disable();\r\n}\r\n\r\nexport function setDefaultCursor(map) {\r\n    if (!map) return;\r\n    map.getCanvas().style.cursor = \"default\";\r\n}\r\n\r\nexport function resetCursor(map) {\r\n    if (!map) return;\r\n    map.getCanvas().style.cursor = \"\";\r\n}\r\n","import { CONTROL_BUTTON_CLASS_NAME, CONTROL_BUTTON_ACTIVE_CLASS_NAME } from \"./constants\";\r\n\r\nexport function createControllButton(content, callback) {\r\n    const button = document.createElement(\"button\");\r\n    button.className = CONTROL_BUTTON_CLASS_NAME;\r\n    button.innerHTML = content;\r\n    button.addEventListener(\"click\", callback);\r\n    return button;\r\n}\r\n\r\nexport function removeActiveClassForButton(button) {\r\n    if (button.classList.contains(CONTROL_BUTTON_ACTIVE_CLASS_NAME)) {\r\n        button.classList.remove(CONTROL_BUTTON_ACTIVE_CLASS_NAME);\r\n    }\r\n}\r\n\r\nexport function addActiveClassForButton(button) {\r\n    if (!button.classList.contains(CONTROL_BUTTON_ACTIVE_CLASS_NAME)) {\r\n        button.classList.add(CONTROL_BUTTON_ACTIVE_CLASS_NAME);\r\n    }\r\n}\r\n","import { pause } from \"../utils/api-helpers\";\r\n\r\nexport class ZoneApi {\r\n    localStoragekey = \"mapZones\";\r\n\r\n    async getZoneList() {\r\n        await pause();\r\n        const zones = localStorage.getItem(this.localStoragekey);\r\n        if (!zones) return;\r\n        return JSON.parse(zones);\r\n    }\r\n\r\n    async addZone(zone) {\r\n        await pause();\r\n        let newZones = [];\r\n        const zones = await this.getZoneList();\r\n        if (zones) newZones = [...zones];\r\n        newZones.push(zone);\r\n        const string = JSON.stringify(newZones);\r\n        localStorage.setItem(this.localStoragekey, string);\r\n    }\r\n\r\n    async updateZone(zone) {\r\n        await pause();\r\n        const zones = await this.getZoneList();\r\n        if (!zones) return;\r\n        const newZones = zones.map((el) => {\r\n            if (el.id === zone.id) return zone;\r\n            return el;\r\n        });\r\n        const string = JSON.stringify(newZones);\r\n        localStorage.setItem(this.localStoragekey, string);\r\n    }\r\n\r\n    async deleteZone(id) {\r\n        await pause();\r\n        const zones = await this.getZoneList();\r\n        if (!zones) return;\r\n        const newZones = zones.filter((el) => el.id !== id);\r\n        const string = JSON.stringify(newZones);\r\n        localStorage.setItem(this.localStoragekey, string);\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { POPUP_LABEL_CLASS_NAME, POPUP_INPUT_CLASS_NAME } from \"../utils/constants\";\r\n\r\nexport const InputName = ({ name, onChange }) => {\r\n    return (\r\n        <>\r\n            <label htmlFor=\"popup-input-name\" className={POPUP_LABEL_CLASS_NAME}>\r\n                Enter zone name:\r\n            </label>\r\n            <br />\r\n            <input\r\n                type=\"text\"\r\n                id=\"popup-input-name\"\r\n                defaultValue={name || \" \"}\r\n                className={POPUP_INPUT_CLASS_NAME}\r\n                onChange={onChange}\r\n            />\r\n            <br />\r\n        </>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { POPUP_COLOR_CLASS_NAME, POPUP_LABEL_CLASS_NAME, DEFAULT_ZONE_LAYER_COLOR } from \"../utils/constants\";\r\n\r\nexport const InputColor = ({ color, onChange }) => {\r\n    return (\r\n        <div className={POPUP_COLOR_CLASS_NAME}>\r\n            <label htmlFor=\"popup-input-color\" className={POPUP_LABEL_CLASS_NAME}>\r\n                Select zone color:\r\n            </label>\r\n            <input\r\n                type=\"color\"\r\n                id=\"popup-input-color\"\r\n                defaultValue={color || DEFAULT_ZONE_LAYER_COLOR}\r\n                onChange={onChange}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { Popup } from \"./popup\";\r\nimport { InputName } from \"./input-name\";\r\nimport { InputColor } from \"./input-color\";\r\nimport { POPUP_CONTROLS_CLASS_NAME } from \"../utils/constants\";\r\nimport { PopupButton } from \"./popup-button\";\r\n\r\nexport const EditPopup = ({ name, onChangeName, color, onChangeColor, onClickEdit, onClickSave, onClickCancel }) => {\r\n    return (\r\n        <Popup>\r\n            <InputName name={name} onChange={onChangeName} />\r\n            <InputColor color={color} onChange={onChangeColor} />\r\n            <PopupButton text=\"Edit Geometry\" onClick={onClickEdit} />\r\n            <div className={POPUP_CONTROLS_CLASS_NAME}>\r\n                <PopupButton text=\"Cancel\" onClick={onClickCancel} />\r\n                <PopupButton text=\"Save\" onClick={onClickSave} />\r\n            </div>\r\n        </Popup>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { Popup } from \"./popup\";\r\nimport { InputName } from \"./input-name\";\r\nimport { InputColor } from \"./input-color\";\r\nimport { POPUP_CONTROLS_CLASS_NAME } from \"../utils/constants\";\r\nimport { PopupButton } from \"./popup-button\";\r\n\r\nexport const CreatePopup = ({ name, color, onChangeName, onChangeColor, onClickCancel, onClickSave }) => {\r\n    return (\r\n        <Popup>\r\n            <InputName name={name} onChange={onChangeName} />\r\n            <InputColor color={color} onChange={onChangeColor} />\r\n            <div className={POPUP_CONTROLS_CLASS_NAME}>\r\n                <PopupButton text=\"Cancel\" onClick={onClickCancel} />\r\n                <PopupButton text=\"Save\" onClick={onClickSave} />\r\n            </div>\r\n        </Popup>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { POPUP_TITLE_CLASS_NAME } from \"../utils/constants\";\r\n\r\nexport const PopupTitle = ({ title }) => {\r\n    return <span className={POPUP_TITLE_CLASS_NAME}>{title || \" \"}</span>;\r\n};\r\n","import React from \"react\";\r\nimport { PopupTitle } from \"./popup-title\";\r\nimport { POPUP_CONTROLS_CLASS_NAME } from \"../utils/constants\";\r\nimport { Popup } from \"./popup\";\r\nimport { PopupButton } from \"./popup-button\";\r\n\r\nexport const DeletePopup = ({ name, onClickDelete, onClickCancel }) => {\r\n    return (\r\n        <Popup>\r\n            <PopupTitle title={`Do you want to delete a zone ${name}?`} />\r\n            <div className={POPUP_CONTROLS_CLASS_NAME}>\r\n                <PopupButton text=\"Cancel\" onClick={onClickCancel} />\r\n                <PopupButton text=\"Delete\" onClick={onClickDelete} />\r\n            </div>\r\n        </Popup>\r\n    );\r\n};\r\n","import { DEFAULT_ZONE_LAYER_COLOR } from \"../utils/constants\";\r\nimport { getDrawingLine } from \"../utils/zone-helpers\";\r\n\r\nexport class DrawLayer {\r\n    /**\r\n     * @param {mapboxgl.Map} map\r\n     * @param {string} id\r\n     */\r\n    constructor(map, id, options) {\r\n        const color = (options && options.color) || DEFAULT_ZONE_LAYER_COLOR;\r\n        this.map = map;\r\n        this.layerId = `zone-stroke-layer-${id}`;\r\n        this.sourceId = `zone-stroke-source-${id}`;\r\n        this.id = id;\r\n        this.color = color;\r\n    }\r\n\r\n    update(coordinates) {\r\n        this.addSource(coordinates);\r\n        this.addLayer();\r\n    }\r\n\r\n    addSource(coordinates) {\r\n        const data = getDrawingLine(coordinates, this.id);\r\n        if (!data) return;\r\n\r\n        const source = this.getSource();\r\n        if (source) {\r\n            return source.setData(data);\r\n        }\r\n\r\n        this.map.addSource(this.sourceId, { type: \"geojson\", data });\r\n    }\r\n\r\n    addLayer() {\r\n        if (this.gerLayer() || !this.getSource()) return;\r\n\r\n        this.map.addLayer({\r\n            id: this.layerId,\r\n            source: this.sourceId,\r\n            type: \"line\",\r\n            layout: {\r\n                \"line-join\": \"round\",\r\n                \"line-cap\": \"round\",\r\n            },\r\n            paint: {\r\n                \"line-color\": this.color,\r\n                \"line-width\": [\"interpolate\", [\"exponential\", 1.5], [\"zoom\"], 5, 1, 16, 6],\r\n            },\r\n        });\r\n    }\r\n\r\n    remove() {\r\n        if (this.gerLayer()) this.map.removeLayer(this.layerId);\r\n        if (this.getSource()) this.map.removeSource(this.sourceId);\r\n    }\r\n\r\n    getSource() {\r\n        return this.map.getSource(this.sourceId);\r\n    }\r\n\r\n    gerLayer() {\r\n        return this.map.getLayer(this.layerId);\r\n    }\r\n}\r\n","import mapboxgl from \"mapbox-gl\";\r\nimport ReactDOM from \"react-dom\";\r\nimport React from \"react\";\r\nimport _ from \"lodash\";\r\nimport { ZoneLayer } from \"../layers/zone-layer\";\r\nimport { generateUniqueId, getDefaultZone, getCenterZoneCoorByCoordinates } from \"../utils/zone-helpers\";\r\nimport { getPlusIconSvg, getEditIconSvg, getDeleteIconSvg } from \"../utils/svg-helpers\";\r\nimport { enableMapInteraction, disableMapInteraction, setDefaultCursor, resetCursor } from \"../utils/map-helpers\";\r\nimport { createControllButton, removeActiveClassForButton, addActiveClassForButton } from \"../utils/dom-helpers\";\r\nimport { ZoneApi } from \"../api/zone-api\";\r\nimport { EditPopup } from \"../componets/edit-popup\";\r\nimport { CreatePopup } from \"../componets/create-popup\";\r\nimport { DeletePopup } from \"../componets/delete-popup\";\r\nimport { DrawLayer } from \"../layers/draw-layer\";\r\n\r\nexport class AdminControll {\r\n    isCreateMode = false;\r\n    isEditMode = false;\r\n    isDeleteMode = false;\r\n    deleteZoneId = null;\r\n    editZoneId = null;\r\n    cacheZone = null;\r\n    newZone = getDefaultZone();\r\n    zoneLayerPatternId = /zone-layer-\\w/i;\r\n\r\n    /**\r\n     * @param {ZoneControll} zoneControll\r\n     */\r\n    constructor(zoneControll) {\r\n        this.zoneControll = zoneControll;\r\n        this.zoneApi = new ZoneApi();\r\n    }\r\n\r\n    /**\r\n     * @param {mapboxgl.Map} map\r\n     */\r\n    onAdd(map) {\r\n        this.map = map;\r\n        this.container = document.createElement(\"div\");\r\n        this.container.className = \"mapboxgl-ctrl mapboxgl-ctrl-group\";\r\n        this.createButton = createControllButton(getPlusIconSvg(), this.onClickCreateButton);\r\n        this.deleteButton = createControllButton(getDeleteIconSvg(), this.onClickDeleteButton);\r\n        this.editButton = createControllButton(getEditIconSvg(), this.onClickEditButton);\r\n        this.container.appendChild(this.createButton);\r\n        this.container.appendChild(this.deleteButton);\r\n        this.container.appendChild(this.editButton);\r\n        return this.container;\r\n    }\r\n\r\n    onRemove() {\r\n        this.container.parentNode.removeChild(this.container);\r\n        this.disableAllModes();\r\n        this.map = undefined;\r\n    }\r\n\r\n    //#region Edit zone\r\n\r\n    onClickEditButton = () => {\r\n        if (this.isEditMode) return this.disableEditMode();\r\n        this.disableAllModes();\r\n        this.enableEditMode();\r\n    };\r\n\r\n    updateEditZoneLayer() {\r\n        if (!this.editZone || this.editZone.coordinates.length < 4) return;\r\n        this.drawEditLayer.update(this.editZone.coordinates);\r\n    }\r\n\r\n    /**\r\n     * @param {mapboxgl.MapMouseEvent & mapboxgl.EventData} e\r\n     */\r\n    onMouseUpEdit = (e) => {\r\n        if (this.map) this.map.off(\"mousemove\", this.onMouseMoveEdit);\r\n        if (this.editZone) this.showEditPopup(this.editZone.id);\r\n        this.drawEditLayer.remove();\r\n        if (this.editZone && this.editZone.coordinates.length > 4) {\r\n            this.zoneControll.updateZoneCoordinates(this.editZone.id, this.editZone.coordinates);\r\n        }\r\n        enableMapInteraction(this.map);\r\n        resetCursor(this.map);\r\n        this.addCursorPointerListener();\r\n    };\r\n\r\n    /**\r\n     * @param {mapboxgl.MapMouseEvent & mapboxgl.EventData} e\r\n     */\r\n    onMouseMoveEdit = (e) => {\r\n        if (!this.editZone) return;\r\n        this.editZone.coordinates.push(e.lngLat.toArray());\r\n        this.updateEditZoneLayer();\r\n    };\r\n\r\n    /**\r\n     * @param {mapboxgl.MapMouseEvent & mapboxgl.EventData} e\r\n     */\r\n    onMouseDownEdit = (e) => {\r\n        if (this.map) this.map.on(\"mousemove\", this.onMouseMoveEdit);\r\n        if (this.map) this.map.once(\"mouseup\", this.onMouseUpEdit);\r\n    };\r\n\r\n    onGeometryEdit = () => {\r\n        if (this.editPopup) this.editPopup.remove();\r\n        disableMapInteraction(this.map);\r\n        this.removeCursorPointerListener();\r\n        setDefaultCursor(this.map);\r\n        this.drawEditLayer = new DrawLayer(this.map, this.editZone.id, { color: this.editZone.color });\r\n        this.zoneControll.removeZoneLayer(this.editZone.id);\r\n        this.editZone.coordinates = [];\r\n        if (this.map) this.map.on(\"mousedown\", this.onMouseDownEdit);\r\n    };\r\n\r\n    cancelEditZone = () => {\r\n        this.zoneControll.drawZones();\r\n        if (this.editPopup) this.editPopup.remove();\r\n        this.editZone = null;\r\n    };\r\n\r\n    onSaveEdit = async () => {\r\n        await this.zoneControll.updateZone(this.editZone);\r\n\r\n        if (this.editPopup) this.editPopup.remove();\r\n        this.editZone = null;\r\n    };\r\n\r\n    editZoneColor = (e) => {\r\n        const color = e.target.value;\r\n        this.editZone.color = color;\r\n        this.zoneControll.updateZoneColor(this.editZone.id, color);\r\n    };\r\n\r\n    editZoneName = (e) => {\r\n        this.editZone.name = e.target.value;\r\n    };\r\n\r\n    showEditPopup() {\r\n        const coor = getCenterZoneCoorByCoordinates(this.editZone.coordinates);\r\n        if (!coor) return;\r\n\r\n        const popupContainer = document.createElement(\"div\");\r\n\r\n        this.editPopup = new mapboxgl.Popup({\r\n            closeButton: false,\r\n            closeOnClick: false,\r\n            closeOnMove: false,\r\n        })\r\n            .setLngLat(coor)\r\n            .setDOMContent(popupContainer)\r\n            .addTo(this.map);\r\n\r\n        ReactDOM.render(\r\n            <EditPopup\r\n                color={this.editZone.color}\r\n                name={this.editZone.name}\r\n                onChangeName={this.editZoneName}\r\n                onChangeColor={this.editZoneColor}\r\n                onClickCancel={this.cancelEditZone}\r\n                onClickSave={this.onSaveEdit}\r\n                onClickEdit={this.onGeometryEdit}\r\n            />,\r\n            popupContainer,\r\n        );\r\n    }\r\n\r\n    onClickEdit = (e) => {\r\n        const feature = this.getZoneFeatureByEvent(e);\r\n        if (!feature) return;\r\n        const zoneId = feature.properties.id;\r\n        if (this.editZone && zoneId === this.editZone.id) return;\r\n        if (this.editPopup) this.editPopup.remove();\r\n        const zone = this.zoneControll.getZoneById(zoneId);\r\n        this.editZone = _.cloneDeep(zone);\r\n        this.showEditPopup();\r\n    };\r\n\r\n    enableEditMode = () => {\r\n        addActiveClassForButton(this.editButton);\r\n        this.addCursorPointerListener();\r\n        if (this.map) this.map.on(\"click\", this.onClickEdit);\r\n        this.isEditMode = true;\r\n    };\r\n\r\n    disableEditMode = () => {\r\n        removeActiveClassForButton(this.editButton);\r\n        this.removeCursorPointerListener();\r\n        if (this.map) this.map.off(\"click\", this.onClickEdit);\r\n        this.cancelEditZone();\r\n        this.editZone = null;\r\n        this.isEditMode = false;\r\n    };\r\n\r\n    //#endregion\r\n\r\n    //#region Create zone\r\n\r\n    onClickCreateButton = () => {\r\n        if (this.isCreateMode) return this.disableCreateMode();\r\n        this.disableAllModes();\r\n        this.enableCreateMode();\r\n    };\r\n\r\n    enableCreateMode() {\r\n        this.newZone = getDefaultZone();\r\n        const id = generateUniqueId();\r\n        this.newZone.id = id;\r\n        if (this.map) this.drawlayer = new DrawLayer(this.map, id);\r\n        this.newZonelayer = new ZoneLayer(this.map, id);\r\n        if (this.map) this.map.once(\"mousedown\", this.onMouseDownCreate);\r\n        addActiveClassForButton(this.createButton);\r\n        disableMapInteraction(this.map);\r\n        setDefaultCursor(this.map);\r\n        this.isCreateMode = true;\r\n    }\r\n\r\n    disableCreateMode = () => {\r\n        this.newZone = getDefaultZone();\r\n        if (this.createPopup) this.createPopup.remove();\r\n        if (this.newZonelayer) this.newZonelayer.remove();\r\n        if (this.drawlayer) this.drawlayer.remove();\r\n        removeActiveClassForButton(this.createButton);\r\n        enableMapInteraction(this.map);\r\n        resetCursor(this.map);\r\n        this.isCreateMode = false;\r\n    };\r\n\r\n    setNewZoneName = (e) => {\r\n        this.newZone.name = e.target.value;\r\n    };\r\n\r\n    setNewZoneColor = (e) => {\r\n        this.newZone.color = e.target.value;\r\n        this.updateColorInNewZone();\r\n    };\r\n\r\n    createZone = () => {\r\n        const zone = _.cloneDeep(this.newZone);\r\n        this.zoneControll.createZone(zone);\r\n        this.onClickCreateButton();\r\n        this.createPopup.remove();\r\n        this.newZonelayer.remove();\r\n        this.drawlayer.remove();\r\n        this.newZone = getDefaultZone();\r\n    };\r\n\r\n    updateColorInNewZone() {\r\n        this.newZonelayer.setColor(this.newZone.color);\r\n    }\r\n\r\n    showCreatePopup() {\r\n        const coor = getCenterZoneCoorByCoordinates(this.newZone.coordinates);\r\n        if (!coor) return;\r\n        const popupContainer = document.createElement(\"div\");\r\n        this.createPopup = new mapboxgl.Popup({\r\n            closeButton: false,\r\n            closeOnClick: false,\r\n            closeOnMove: false,\r\n        })\r\n            .setLngLat(coor)\r\n            .setDOMContent(popupContainer)\r\n            .addTo(this.map);\r\n\r\n        const name = this.zoneControll.getNewZoneName();\r\n        this.newZone.name = name;\r\n        ReactDOM.render(\r\n            <CreatePopup\r\n                name={name}\r\n                color={null}\r\n                onChangeName={this.setNewZoneName}\r\n                onChangeColor={this.setNewZoneColor}\r\n                onClickCancel={this.disableCreateMode}\r\n                onClickSave={this.createZone}\r\n            />,\r\n            popupContainer,\r\n        );\r\n    }\r\n\r\n    updateNewZoneLayer() {\r\n        if (this.newZone.coordinates.length < 4) return;\r\n        this.drawlayer.update(this.newZone.coordinates, true);\r\n    }\r\n\r\n    /**\r\n     * @param {mapboxgl.MapMouseEvent & mapboxgl.EventData} e\r\n     */\r\n    onMouseUpCreate = (e) => {\r\n        this.map.off(\"mousemove\", this.onMouseMoveCreate);\r\n        this.showCreatePopup();\r\n        if (this.drawlayer) this.drawlayer.remove();\r\n        if (this.newZonelayer) this.newZonelayer.update(this.newZone.coordinates, true);\r\n    };\r\n\r\n    /**\r\n     * @param {mapboxgl.MapMouseEvent & mapboxgl.EventData} e\r\n     */\r\n    onMouseMoveCreate = (e) => {\r\n        this.newZone.coordinates.push(e.lngLat.toArray());\r\n        this.updateNewZoneLayer();\r\n    };\r\n\r\n    /**\r\n     * @param {mapboxgl.MapMouseEvent & mapboxgl.EventData} e\r\n     */\r\n    onMouseDownCreate = (e) => {\r\n        this.newZone.coordinates.push(e.lngLat.toArray());\r\n        if (this.map) this.map.on(\"mousemove\", this.onMouseMoveCreate);\r\n        if (this.map) this.map.once(\"mouseup\", this.onMouseUpCreate);\r\n    };\r\n\r\n    //#endregion\r\n\r\n    //#region Delete zone\r\n\r\n    cancelDeleteZone = () => {\r\n        this.deletePopup.remove();\r\n        this.deleteZoneId = null;\r\n    };\r\n\r\n    deleteZone = async () => {\r\n        await this.zoneControll.deleteZone(this.deleteZoneId);\r\n        this.deletePopup.remove();\r\n        this.deleteZoneId = null;\r\n    };\r\n\r\n    showDeletePopup(zoneId) {\r\n        const zone = this.zoneControll.getZoneById(zoneId);\r\n        if (!zone) return;\r\n        const coor = getCenterZoneCoorByCoordinates(zone.coordinates);\r\n        if (!coor) return;\r\n        const popupContainer = document.createElement(\"div\");\r\n        this.deletePopup = new mapboxgl.Popup({\r\n            closeButton: false,\r\n            closeOnClick: false,\r\n            closeOnMove: false,\r\n        })\r\n            .setLngLat(coor)\r\n            .setDOMContent(popupContainer)\r\n            .addTo(this.map);\r\n\r\n        ReactDOM.render(\r\n            <DeletePopup name={zone.name} onClickCancel={this.cancelDeleteZone} onClickDelete={this.deleteZone} />,\r\n            popupContainer,\r\n        );\r\n    }\r\n\r\n    onClickDeleteZone = (e) => {\r\n        const feature = this.getZoneFeatureByEvent(e);\r\n        if (!feature) return;\r\n        const zoneId = feature.properties.id;\r\n        if (zoneId === this.deleteZoneId) return;\r\n        if (this.deletePopup) this.deletePopup.remove();\r\n        this.showDeletePopup(zoneId);\r\n        this.deleteZoneId = zoneId;\r\n    };\r\n\r\n    enableDeletetingMode() {\r\n        if (this.map) this.map.on(\"click\", this.onClickDeleteZone);\r\n        addActiveClassForButton(this.deleteButton);\r\n        this.addCursorPointerListener();\r\n        this.isDeleteMode = true;\r\n    }\r\n\r\n    disableDeleteMode() {\r\n        if (this.map) this.map.off(\"click\", this.onClickDeleteZone);\r\n        removeActiveClassForButton(this.deleteButton);\r\n\r\n        if (this.deletePopup) {\r\n            this.deletePopup.remove();\r\n            this.deletePopup = null;\r\n        }\r\n\r\n        this.removeCursorPointerListener();\r\n        this.isDeleteMode = false;\r\n        this.deleteZoneId = null;\r\n    }\r\n\r\n    onClickDeleteButton = () => {\r\n        if (this.isDeleteMode) return this.disableDeleteMode();\r\n        this.disableAllModes();\r\n        this.enableDeletetingMode();\r\n    };\r\n\r\n    //#endregion\r\n\r\n    //#region Utils\r\n\r\n    cursorListener = (e) => {\r\n        const feature = this.getZoneFeatureByEvent(e);\r\n        if (feature) {\r\n            this.map.getCanvas().style.cursor = \"pointer\";\r\n        } else {\r\n            this.map.getCanvas().style.cursor = \"\";\r\n        }\r\n    };\r\n\r\n    addCursorPointerListener() {\r\n        this.map.on(\"mousemove\", this.cursorListener);\r\n    }\r\n\r\n    removeCursorPointerListener() {\r\n        this.map.off(\"mousemove\", this.cursorListener);\r\n    }\r\n\r\n    disableAllModes() {\r\n        if (this.isEditMode) this.disableEditMode();\r\n        if (this.isDeleteMode) this.disableDeleteMode();\r\n        if (this.isCreateMode) this.disableCreateMode();\r\n    }\r\n\r\n    getZoneFeatureByEvent(e) {\r\n        const features = this.map.queryRenderedFeatures(e.point);\r\n        if (!features.length) return;\r\n        const feature = features.shift();\r\n        if (!feature) return;\r\n        if (feature.layer.id.match(this.zoneLayerPatternId)) return feature;\r\n    }\r\n\r\n    //#endregion\r\n}\r\n","export function getDeleteIconSvg() {\r\n    return `\r\n\t<svg version=\"1.1\" viewBox=\"0 0 384 384\">\r\n\t\t<path\r\n\t\td=\"M64,341.333C64,364.907,83.093,384,106.667,384h170.667C300.907,384,320,364.907,320,341.333v-256H64V341.333z\" />\r\n\t\t<polygon\r\n\t\tpoints=\"266.667,21.333 245.333,0 138.667,0 117.333,21.333 42.667,21.333 42.667,64 341.333,64 341.333,21.333 \t\t\t\" />\r\n\t</svg>\r\n\t`;\r\n}\r\n\r\nexport function getEditIconSvg() {\r\n    return `\r\n\t<svg version=\"1.1\" viewBox=\"0 0 383.947 383.947\">\r\n\t\t<polygon points=\"0,303.947 0,383.947 80,383.947 316.053,147.893 236.053,67.893\" />\r\n\t\t<path\r\n\t\td=\"M377.707,56.053L327.893,6.24c-8.32-8.32-21.867-8.32-30.187,0l-39.04,39.04l80,80l39.04-39.04C386.027,77.92,386.027,64.373,377.707,56.053z\" />\r\n\t</svg>\r\n\t`;\r\n}\r\n\r\nexport function getPlusIconSvg() {\r\n    return `\r\n\t<svg version=\"1.1\" viewBox=\"0 0 42 42\">\r\n\t\t<path d=\"M37.059,16H26V4.941C26,2.224,23.718,0,21,0s-5,2.224-5,4.941V16H4.941C2.224,16,0,18.282,0,21s2.224,5,4.941,5H16v11.059\r\n\t\tC16,39.776,18.282,42,21,42s5-2.224,5-4.941V26h11.059C39.776,26,42,23.718,42,21S39.776,16,37.059,16z\" />\r\n\t</svg>\r\n\t`;\r\n}\r\n","import { ZoneApi } from \"../api/zone-api\";\r\nimport { ZoneLayer } from \"../layers/zone-layer\";\r\n\r\nexport class ZoneControll {\r\n    zones = [];\r\n    zoneApi = new ZoneApi();\r\n    layers = new Map();\r\n\r\n    /**\r\n     * @param {mapboxgl.Map} map\r\n     */\r\n    onAdd(map) {\r\n        this.map = map;\r\n        this.container = document.createElement(\"div\");\r\n        this.container.className = \"mapboxgl-ctrl\";\r\n        map.on(\"load\", this.init);\r\n        return this.container;\r\n    }\r\n\r\n    onRemove() {\r\n        this.container.parentNode.removeChild(this.container);\r\n        this.map = undefined;\r\n    }\r\n\r\n    init = async () => {\r\n        const zones = await this.zoneApi.getZoneList();\r\n        if (!zones) return;\r\n        this.zones = zones;\r\n        this.drawZones();\r\n    };\r\n\r\n    async deleteZone(zoneId) {\r\n        await this.zoneApi.deleteZone(zoneId);\r\n        this.zones = this.zones.filter((zone) => zone.id !== zoneId);\r\n        const layer = this.layers.get(zoneId);\r\n        if (!layer) return;\r\n        layer.remove();\r\n        this.layers.delete(zoneId);\r\n    }\r\n\r\n    async updateZone(newZone) {\r\n        await this.zoneApi.updateZone(newZone);\r\n\r\n        this.zones = this.zones.map((el) => {\r\n            if (el.id === newZone.id) return newZone;\r\n            return el;\r\n        });\r\n\r\n        this.drawZones();\r\n    }\r\n\r\n    async createZone(newZone) {\r\n        await this.zoneApi.addZone(newZone);\r\n        this.zones.push(newZone);\r\n        this.drawZones();\r\n    }\r\n\r\n    getZoneList() {\r\n        return this.zones;\r\n    }\r\n\r\n    getZoneById(zoneId) {\r\n        return this.zones.find((el) => el.id === zoneId);\r\n    }\r\n\r\n    updateZoneColor(zoneId, color) {\r\n        const layer = this.layers.get(zoneId);\r\n        if (!layer) return;\r\n        layer.setColor(color);\r\n    }\r\n\r\n    updateZoneCoordinates(zoneId, coordinates) {\r\n        const layer = this.layers.get(zoneId);\r\n        if (!layer) return;\r\n        layer.update(coordinates, true);\r\n    }\r\n\r\n    removeZoneLayer(zoneId) {\r\n        const layer = this.layers.get(zoneId);\r\n        if (layer) layer.remove();\r\n    }\r\n\r\n    getNewZoneName() {\r\n        return `Zone ${this.zones.length + 1}`;\r\n    }\r\n\r\n    drawZones() {\r\n        this.zones.forEach((zone) => {\r\n            const existLayer = this.layers.get(zone.id);\r\n            if (existLayer) {\r\n                existLayer.update(zone.coordinates);\r\n                existLayer.setColor(zone.color);\r\n                existLayer.updateName(zone.name);\r\n            } else {\r\n                const layer = new ZoneLayer(this.map, zone.id, { color: zone.color, name: zone.name });\r\n                layer.update(zone.coordinates);\r\n                this.layers.set(zone.id, layer);\r\n            }\r\n        });\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport mapboxgl from \"mapbox-gl\";\r\nimport { UserControll } from \"./controls/user-controll\";\r\nimport { AdminControll } from \"./controls/admin-controll\";\r\nimport \"mapbox-gl/dist/mapbox-gl.css\";\r\nimport \"./index.scss\";\r\nimport { ZoneControll } from \"./controls/zone-controll\";\r\nimport { MAP_ID } from \"./utils/constants\";\r\n\r\nexport const Cities = {\r\n    Bengaluru: new mapboxgl.LngLat(77.59094323372614, 12.975557791300176),\r\n};\r\n\r\n/**\r\n * @typedef {object} Props\r\n * @prop {string} mapStyle\r\n * @prop {string} mapToken\r\n * @prop {boolean} isAdmin\r\n * @prop {mapboxgl.LngLat} cityCoor\r\n *\r\n * @extends {React.Component<Props>}\r\n */\r\nexport class MapWithZones extends React.Component {\r\n    componentDidMount() {\r\n        const { mapStyle, mapToken, isAdmin, cityCoor } = this.props;\r\n\r\n        mapboxgl.accessToken = mapToken;\r\n        const style = mapStyle || \"mapbox://styles/mapbox/streets-v11\";\r\n\r\n        this.map = new mapboxgl.Map({\r\n            container: MAP_ID,\r\n            style,\r\n            center: cityCoor,\r\n            zoom: 12,\r\n        });\r\n\r\n        this.zoneControll = new ZoneControll();\r\n        this.map.addControl(this.zoneControll);\r\n        this.userControll = new UserControll(this.zoneControll);\r\n        this.adminControll = new AdminControll(this.zoneControll);\r\n\r\n        if (isAdmin) {\r\n            this.map.addControl(this.adminControll);\r\n        } else {\r\n            this.map.addControl(this.userControll);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { isAdmin } = this.props;\r\n\r\n        if (isAdmin !== prevProps.isAdmin) {\r\n            if (!this.map) return;\r\n            if (isAdmin) {\r\n                this.map.removeControl(this.userControll);\r\n                this.map.addControl(this.adminControll);\r\n            } else {\r\n                this.map.removeControl(this.adminControll);\r\n                this.map.addControl(this.userControll);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <div id={MAP_ID} />;\r\n    }\r\n}\r\n","import React, { useState } from \"react\";\nimport { MapWithZones, Cities } from \"./map-with-zones\";\nimport \"./App.scss\";\n\nconst App = () => {\n    const [isAdmin, setIsAdmin] = useState(true);\n\n    return (\n        <div className=\"App\">\n            <div className=\"test-panel\">\n                <button onClick={() => setIsAdmin(true)} className={isAdmin ? \"test-panel__button-active\" : \"\"}>\n                    ADMIN MODE\n                </button>\n                <button onClick={() => setIsAdmin(false)} className={!isAdmin ? \"test-panel__button-active\" : \"\"}>\n                    USER MODE\n                </button>\n            </div>\n            <MapWithZones mapToken={process.env.REACT_APP_MAPBOX_TOKEN} cityCoor={Cities.Bengaluru} isAdmin={isAdmin} />\n        </div>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}