{"version":3,"sources":["map-with-zones/utils/constants.js","map-with-zones/utils/dom-helpers.js","map-with-zones/layers/marker-layer.js","map-with-zones/utils/zone-helpers.js","map-with-zones/layers/radius-stroke-layer.js","map-with-zones/layers/radius-layer.js","map-with-zones/utils/api-helpers.js","map-with-zones/api/user-api.js","map-with-zones/controls/user-controll.js","map-with-zones/layers/zone-stroke-layer.js","map-with-zones/layers/zone-name-layer.js","map-with-zones/layers/zone-layer.js","map-with-zones/utils/map-helpers.js","map-with-zones/api/zone-api.js","map-with-zones/controls/admin-controll.js","map-with-zones/utils/svg-helpers.js","map-with-zones/controls/zone-controll.js","map-with-zones/index.jsx","App.js","serviceWorker.js","index.js"],"names":["MAP_ID","CONTROL_BUTTON_CLASS_NAME","CONTROL_BUTTON_ACTIVE_CLASS_NAME","POPUP_BUTTON_CLASS_NAME","POPUP_INPUT_CLASS_NAME","POPUP_LABEL_CLASS_NAME","POPUP_TITLE_CLASS_NAME","POPUP_COLOR_CLASS_NAME","POPUP_CONTROLS_CLASS_NAME","TABLE_TITLE_CLASS_NAME","TABLE_ZONES_CLASS_NAME","createControllButton","content","callback","button","document","createElement","className","innerHTML","addEventListener","removeActiveClassForButton","classList","contains","remove","addActiveClassForButton","add","addElementListener","id","event","element","getElementById","getPopupInputColor","color","getPopupButton","text","getPopupInputName","name","setUserTableTitle","title","titleElement","innerText","MarkerLayerEvents","MarkerLayer","map","radiusInputId","radiusButtonId","onInputChange","e","fire","radius","Number","target","value","onDragEnd","lngLat","marker","getLngLat","onButtonClick","mapboxgl","Marker","draggable","popup","Popup","closeButton","closeOnClick","closeOnMove","setHTML","getPopupContent","this","coor","setLngLat","toArray","setPopup","addTo","togglePopup","subscribeToPopup","on","Evented","getCenterZoneByCoordinates","coordinates","length","line","turf","polygon","getCenterZoneCoorByCoordinates","center","getZonePolygonByCoordinates","getZoneLineByCoordinates","geometry","simlified","tolerance","getCircleByRadius","RadiusStrokeLayer","layerId","sourceId","addSource","addLayer","data","circle","getLineByRadius","source","getSource","setData","type","gerLayer","layout","paint","removeLayer","removeSource","getLayer","RadiusLayer","strokeLayer","update","pause","a","Promise","resolve","setTimeout","UserApi","info","console","log","UserControll","zoneControll","zones","userApi","sendInfoAboutIncludedZones","onRadiusChanged","updateRadiusLayer","findZonesInRadius","onDragEndMarker","onMapClick","markerLayer","container","enableUserMode","disableUserMode","parentNode","removeChild","undefined","radiusLayer","off","table","removeUserTable","once","appendChild","createUserControllTable","intersectedZones","getZoneList","filter","zone","el","zoneElement","join","setUserTableZones","ZoneStrokeLayer","options","setPaintProperty","ZoneNameLayer","minzoom","ZoneLayer","nameLayer","isEdit","setColor","enableMapInteraction","dragPan","enable","boxZoom","scrollZoom","dragRotate","doubleClickZoom","touchZoomRotate","touchPitch","disableMapInteraction","disable","ZoneApi","localStoragekey","localStorage","getItem","JSON","parse","newZones","push","string","stringify","setItem","AdminControll","isCreateMode","isEditMode","isDeleteMode","deleteZoneId","editZoneId","cacheZone","newZone","popupCreateId","popupCreateInputNameId","popupCreateInputColorId","popupCreateButtonSaveId","popupCreateButtonCancelId","popupDeleteId","popupDeleteButtonConfirmId","popupDeleteButtonCancelId","popupEditId","popupEditInputNameId","popupEditInputColorId","popupEditButtonSaveId","popupEditButtonCancelId","popupEditButtonGeometryId","zoneLayerPatternId","onClickEditButton","disableEditMode","disableAllModes","enableEditMode","onMouseUpEdit","onMouseMoveEdit","editZone","showEditPopup","updateEditZoneLayer","onMouseDownEdit","onGeometryEdit","editPopup","removeZoneLayer","cancelEditZone","drawZones","onSaveEdit","updateZone","editZoneColor","updateZoneColor","editZoneName","onClickEdit","feature","getZoneFeatureByEvent","zoneId","properties","getZoneById","_","cloneDeep","editButton","addCursorPointerListener","removeCursorPointerListener","onClickCreateButton","disableCreateMode","enableCreateMode","createPopup","newZonelayer","createButton","setNewZoneName","setNewZoneColor","updateColorInNewZone","createZone","onMouseUpCreate","onMouseMoveCreate","showCreatePopup","updateNewZoneLayer","onMouseDownCreate","cancelDeleteZone","deletePopup","deleteZone","onClickDeleteZone","showDeletePopup","onClickDeleteButton","disableDeleteMode","enableDeletetingMode","cursorListener","getCanvas","style","cursor","zoneApi","deleteButton","updateZoneCoordinates","getEditPopupContent","addEditPopupListeners","Date","now","toString","Math","random","substr","getCreatePopupContent","addCreatePopupListners","getNewZoneName","zoneName","getDeletePopupContent","addDeletePopupListeners","features","queryRenderedFeatures","point","shift","layer","match","ZoneControll","layers","Map","init","get","delete","addZone","find","forEach","existLayer","set","Cities","Bengaluru","LngLat","MapWithZones","props","mapStyle","mapToken","isAdmin","cityCoor","accessToken","zoom","addControl","userControll","adminControll","prevProps","removeControl","React","Component","App","useState","setIsAdmin","onClick","process","Boolean","window","location","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8b6666cd.chunk.js","sourcesContent":["export const DEFAULT_ZONE_LAYER_COLOR = \"#008888\";\r\nexport const DEFAULT_RADIUS_LAYER_COLOR = \"#292828\";\r\nexport const MAP_ID = \"mapbox-container-element-id\";\r\nexport const CONTROL_BASE_CLASS_NAME = \"map-controll\";\r\nexport const CONTROL_BUTTON_CLASS_NAME = `${CONTROL_BASE_CLASS_NAME}__button`;\r\nexport const CONTROL_BUTTON_ACTIVE_CLASS_NAME = `${CONTROL_BUTTON_CLASS_NAME}_active`;\r\nexport const POPUP_BASE_CLASS_NAME = \"map-popup\";\r\nexport const POPUP_BUTTON_CLASS_NAME = `${POPUP_BASE_CLASS_NAME}__button`;\r\nexport const POPUP_INPUT_CLASS_NAME = `${POPUP_BASE_CLASS_NAME}__input`;\r\nexport const POPUP_LABEL_CLASS_NAME = `${POPUP_BASE_CLASS_NAME}__label`;\r\nexport const POPUP_TITLE_CLASS_NAME = `${POPUP_BASE_CLASS_NAME}__title`;\r\nexport const POPUP_COLOR_CLASS_NAME = `${POPUP_BASE_CLASS_NAME}__color`;\r\nexport const POPUP_CONTROLS_CLASS_NAME = `${POPUP_BASE_CLASS_NAME}__controls`;\r\nexport const TABLE_BASE_CLASS_NAME = \"map-table\";\r\nexport const TABLE_TITLE_CLASS_NAME = `${TABLE_BASE_CLASS_NAME}__title`;\r\nexport const TABLE_ZONES_CLASS_NAME = `${TABLE_BASE_CLASS_NAME}__zones`;\r\n","import {\r\n    CONTROL_BUTTON_CLASS_NAME,\r\n    CONTROL_BUTTON_ACTIVE_CLASS_NAME,\r\n    POPUP_LABEL_CLASS_NAME,\r\n    DEFAULT_ZONE_LAYER_COLOR,\r\n    POPUP_BUTTON_CLASS_NAME,\r\n    POPUP_TITLE_CLASS_NAME,\r\n    POPUP_INPUT_CLASS_NAME,\r\n    POPUP_COLOR_CLASS_NAME,\r\n    TABLE_BASE_CLASS_NAME,\r\n    TABLE_TITLE_CLASS_NAME,\r\n    TABLE_ZONES_CLASS_NAME,\r\n    MAP_ID,\r\n} from \"./constants\";\r\n\r\nexport function createControllButton(content, callback) {\r\n    const button = document.createElement(\"button\");\r\n    button.className = CONTROL_BUTTON_CLASS_NAME;\r\n    button.innerHTML = content;\r\n    button.addEventListener(\"click\", callback);\r\n    return button;\r\n}\r\n\r\nexport function removeActiveClassForButton(button) {\r\n    if (button.classList.contains(CONTROL_BUTTON_ACTIVE_CLASS_NAME)) {\r\n        button.classList.remove(CONTROL_BUTTON_ACTIVE_CLASS_NAME);\r\n    }\r\n}\r\n\r\nexport function addActiveClassForButton(button) {\r\n    if (!button.classList.contains(CONTROL_BUTTON_ACTIVE_CLASS_NAME)) {\r\n        button.classList.add(CONTROL_BUTTON_ACTIVE_CLASS_NAME);\r\n    }\r\n}\r\n\r\nexport function addElementListener(id, event, callback) {\r\n    const element = document.getElementById(id);\r\n    if (element) {\r\n        element.addEventListener(event, callback);\r\n    }\r\n}\r\n\r\nexport function removeElementListener(id, event, callback) {\r\n    const element = document.getElementById(id);\r\n    if (element) {\r\n        element.removeEventListener(event, callback);\r\n    }\r\n}\r\n\r\nexport function getPopupInputColor(color, id) {\r\n    return `\r\n        <div class=\"${POPUP_COLOR_CLASS_NAME}\">\r\n            <label for=\"${id}\" class=\"${POPUP_LABEL_CLASS_NAME}\">Select zone color:</label>\r\n            <input type=\"color\" id=\"${id}\" value=\"${color || DEFAULT_ZONE_LAYER_COLOR}\" />\r\n        </div>\r\n        `;\r\n}\r\n\r\nexport function getPopupButton(text, id) {\r\n    return `<button id=\"${id}\" class=\"${POPUP_BUTTON_CLASS_NAME}\">${text || \" \"}</button>`;\r\n}\r\n\r\nexport function getPopupTitle(title) {\r\n    return `<span class=\"${POPUP_TITLE_CLASS_NAME}\">${title || \" \"}</span>`;\r\n}\r\n\r\nexport function getPopupInputName(name, id) {\r\n    return `\r\n        <label for=${id} class=\"${POPUP_LABEL_CLASS_NAME}\">Enter zone name:</label></br>\r\n        <input type=\"text\" id=\"${id}\" value=\"${name || \" \"}\" class=\"${POPUP_INPUT_CLASS_NAME}\" /></br>`;\r\n}\r\n\r\nexport function getPopupInputRadius(radius, id) {\r\n    return `\r\n        <label for=${id} class=\"${POPUP_LABEL_CLASS_NAME}\">Enter radius (km):</label></br>\r\n        <input type=\"number\" id=\"${id}\" value=\"${radius || 0}\" class=\"${POPUP_INPUT_CLASS_NAME}\" /></br>`;\r\n}\r\n\r\nexport function createUserControllTable() {\r\n    const map = document.getElementById(MAP_ID);\r\n\r\n    if (!map) return;\r\n\r\n    const table = document.createElement(\"div\");\r\n    table.className = TABLE_BASE_CLASS_NAME;\r\n    table.id = TABLE_BASE_CLASS_NAME;\r\n\r\n    const title = document.createElement(\"span\");\r\n    title.className = TABLE_TITLE_CLASS_NAME;\r\n    title.id = TABLE_TITLE_CLASS_NAME;\r\n\r\n    const zones = document.createElement(\"div\");\r\n    zones.className = TABLE_ZONES_CLASS_NAME;\r\n    zones.id = TABLE_ZONES_CLASS_NAME;\r\n\r\n    table.appendChild(title);\r\n    table.appendChild(zones);\r\n    map.appendChild(table);\r\n}\r\n\r\nexport function removeUserTable() {\r\n    const table = document.getElementById(TABLE_BASE_CLASS_NAME);\r\n    if (!table) return;\r\n    table.remove();\r\n}\r\n\r\nexport function setUserTableTitle(title) {\r\n    const titleElement = document.getElementById(TABLE_TITLE_CLASS_NAME);\r\n    if (!titleElement) return;\r\n    titleElement.innerText = title;\r\n}\r\n\r\nexport function setUserTableZones(zones) {\r\n    const zoneElement = document.getElementById(TABLE_ZONES_CLASS_NAME);\r\n    if (!zoneElement) return;\r\n    zoneElement.innerHTML = zones.map((zone) => `<span>${zone.name}</span>`).join(\" \");\r\n}\r\n","import mapboxgl from \"mapbox-gl\";\r\nimport { POPUP_BASE_CLASS_NAME, POPUP_CONTROLS_CLASS_NAME } from \"../utils/constants\";\r\nimport { getPopupInputRadius, getPopupButton, addElementListener } from \"../utils/dom-helpers\";\r\n\r\nexport const MarkerLayerEvents = {\r\n    dragend: \"dragend\",\r\n    radiusChanged: \"radiusChanged\",\r\n    buttonClick: \"buttonClick\",\r\n};\r\n\r\nexport class MarkerLayer extends mapboxgl.Evented {\r\n    radiusInputId = \"marker-input-radius\";\r\n    radiusButtonId = \"marker-button-radius\";\r\n\r\n    /**\r\n     *\r\n     * @param {mapboxgl.Map} map\r\n     */\r\n    constructor(map) {\r\n        super();\r\n        this.map = map;\r\n\r\n        /** @type{mapboxgl.Marker} */\r\n        this.marker = new mapboxgl.Marker({\r\n            draggable: true,\r\n        });\r\n\r\n        /** @type{mapboxgl.Popup} */\r\n        this.popup = new mapboxgl.Popup({ closeButton: false, closeOnClick: false, closeOnMove: false }).setHTML(\r\n            this.getPopupContent(),\r\n        );\r\n    }\r\n\r\n    subscribeToPopup() {\r\n        addElementListener(this.radiusInputId, \"change\", this.onInputChange);\r\n        addElementListener(this.radiusButtonId, \"click\", this.onButtonClick);\r\n    }\r\n\r\n    getPopupContent() {\r\n        return `\r\n        <div class=${POPUP_BASE_CLASS_NAME}>\r\n            ${getPopupInputRadius(1, this.radiusInputId)}\r\n            <div class=\"${POPUP_CONTROLS_CLASS_NAME}\">\r\n                ${getPopupButton(\"Select\", this.radiusButtonId)}\r\n            </div>\r\n        </div>\r\n        `;\r\n    }\r\n\r\n    remove() {\r\n        if (this.marker) this.marker.remove();\r\n        if (this.popup) this.popup.remove();\r\n    }\r\n\r\n    /**\r\n     * @param {mapboxgl.LngLat} coor\r\n     */\r\n    update(coor) {\r\n        this.marker.setLngLat(coor.toArray());\r\n        this.marker.setPopup(this.popup);\r\n        this.marker.addTo(this.map);\r\n        this.marker.togglePopup();\r\n        this.subscribeToPopup();\r\n        this.marker.on(\"dragend\", this.onDragEnd);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {import(\"react\").ChangeEvent<HTMLInputElement>} e\r\n     */\r\n    onInputChange = (e) => {\r\n        this.fire(MarkerLayerEvents.radiusChanged, { radius: Number(e.target.value) });\r\n    };\r\n\r\n    onDragEnd = () => {\r\n        const lngLat = this.marker.getLngLat();\r\n        this.fire(MarkerLayerEvents.dragend, { lngLat });\r\n    };\r\n\r\n    onButtonClick = () => {\r\n        this.fire(MarkerLayerEvents.buttonClick);\r\n    }\r\n}\r\n","import * as turf from \"@turf/turf\";\r\nimport { DEFAULT_ZONE_LAYER_COLOR } from \"./constants\";\r\n\r\nexport function generateUniqueId() {\r\n    return Date.now().toString(36) + Math.random().toString(36).substr(2);\r\n}\r\n\r\nexport function getDefaultZone() {\r\n    return {\r\n        name: \"\",\r\n        color: DEFAULT_ZONE_LAYER_COLOR,\r\n        id: null,\r\n        coordinates: [],\r\n    };\r\n}\r\n\r\nexport function getDefaultUserData() {\r\n    return {\r\n        lngLat: null,\r\n        radius: 1,\r\n        zones: [],\r\n    };\r\n}\r\n\r\nexport function getCenterZoneByCoordinates(coordinates) {\r\n    if (coordinates.length < 2) return;\r\n    const line = turf.lineString(coordinates);\r\n    const polygon = turf.lineToPolygon(line);\r\n    const center = turf.centerOfMass(polygon);\r\n    return center;\r\n}\r\n\r\nexport function getCenterZoneCoorByCoordinates(coordinates) {\r\n    const center = getCenterZoneByCoordinates(coordinates);\r\n    if (!center) return;\r\n    const coor = turf.getCoord(center);\r\n    return coor;\r\n}\r\n\r\nexport function getZonePolygonByCoordinates(coordinates, id) {\r\n    const line = getZoneLineByCoordinates(coordinates, id);\r\n    if (!line || line.geometry.coordinates.length < 4) return;\r\n    return turf.lineToPolygon(line);\r\n}\r\n\r\nexport function getZoneLineByCoordinates(coordinates, id) {\r\n    const line = turf.lineString(coordinates, { id });\r\n    const simlified = turf.simplify(line, { tolerance: 0.00001 });\r\n    if (simlified.geometry.coordinates.length < 4) return;\r\n    const polygon = turf.lineToPolygon(simlified);\r\n    const polygonedLine = turf.polygonToLine(polygon);\r\n    return polygonedLine;\r\n}\r\n\r\nexport function getCircleByRadius(center, radius) {\r\n    return turf.circle(center.toArray(), radius);\r\n}\r\n\r\nexport function getLineByRadius(center, radius) {\r\n    if (!center || !radius) return;\r\n    const circle = turf.circle(center.toArray(), radius);\r\n    return turf.polygonToLine(circle);\r\n}\r\n","import { getLineByRadius } from \"../utils/zone-helpers\";\r\nimport { DEFAULT_RADIUS_LAYER_COLOR } from \"../utils/constants\";\r\n\r\nexport class RadiusStrokeLayer {\r\n    /**\r\n     *\r\n     * @param {mapboxgl.Map} map\r\n     * @param {string} id\r\n     */\r\n    constructor(map) {\r\n        this.map = map;\r\n        this.layerId = `radius-stroke-layer`;\r\n        this.sourceId = `radius-stroke-source`;\r\n    }\r\n\r\n    update(radius, coor) {\r\n        this.addSource(radius, coor);\r\n        this.addLayer();\r\n    }\r\n\r\n    addSource(radius, coor) {\r\n        const data = getLineByRadius(coor, radius);\r\n        if (!data) return;\r\n\r\n        const source = this.getSource();\r\n        if (source) {\r\n            return source.setData(data);\r\n        }\r\n\r\n        this.map.addSource(this.sourceId, { type: \"geojson\", data });\r\n    }\r\n\r\n    addLayer() {\r\n        if (this.gerLayer() || !this.getSource()) return;\r\n\r\n        this.map.addLayer({\r\n            id: this.layerId,\r\n            source: this.sourceId,\r\n            type: \"line\",\r\n            layout: {\r\n                \"line-join\": \"round\",\r\n                \"line-cap\": \"round\",\r\n            },\r\n            paint: {\r\n                \"line-color\": DEFAULT_RADIUS_LAYER_COLOR,\r\n                \"line-width\": [\"interpolate\", [\"exponential\", 1.5], [\"zoom\"], 5, 1, 16, 6],\r\n                \"line-dasharray\": [5, 3],\r\n            },\r\n        });\r\n    }\r\n\r\n    remove() {\r\n        if (this.gerLayer()) this.map.removeLayer(this.layerId);\r\n        if (this.getSource()) this.map.removeSource(this.sourceId);\r\n    }\r\n\r\n    getSource() {\r\n        return this.map.getSource(this.sourceId);\r\n    }\r\n\r\n    gerLayer() {\r\n        return this.map.getLayer(this.layerId);\r\n    }\r\n}\r\n","import { getCircleByRadius } from \"../utils/zone-helpers\";\r\nimport { DEFAULT_RADIUS_LAYER_COLOR } from \"../utils/constants\";\r\nimport { RadiusStrokeLayer } from \"./radius-stroke-layer\";\r\n\r\nexport class RadiusLayer {\r\n    layerId = \"radius-layer\";\r\n    sourceId = \"radius-source\";\r\n\r\n    /**\r\n     *\r\n     * @param {mapboxgl.Map} map\r\n     */\r\n    constructor(map) {\r\n        this.map = map;\r\n        this.strokeLayer = new RadiusStrokeLayer(map);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {number} radius\r\n     * @param {mapboxgl.LngLat} coor\r\n     */\r\n    update(radius, coor) {\r\n        if (radius > 0) {\r\n            this.addSource(radius, coor);\r\n            this.addLayer();\r\n            this.strokeLayer.update(radius, coor);\r\n        } else {\r\n            this.remove();\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {number} radius\r\n     * @param {mapboxgl.LngLat} coor\r\n     */\r\n    addSource(radius, coor) {\r\n        const source = this.getSource();\r\n        const data = getCircleByRadius(coor, radius);\r\n        if (source) {\r\n            source.setData(data);\r\n        } else {\r\n            this.map.addSource(this.sourceId, { type: \"geojson\", data });\r\n        }\r\n    }\r\n\r\n    addLayer() {\r\n        if (this.gerLayer()) return;\r\n\r\n        this.map.addLayer({\r\n            id: this.layerId,\r\n            source: this.sourceId,\r\n            type: \"fill\",\r\n            paint: {\r\n                \"fill-color\": DEFAULT_RADIUS_LAYER_COLOR,\r\n                \"fill-opacity\": 0.4,\r\n            },\r\n        });\r\n    }\r\n\r\n    remove() {\r\n        if (this.gerLayer()) this.map.removeLayer(this.layerId);\r\n        if (this.getSource()) this.map.removeSource(this.sourceId);\r\n        this.strokeLayer.remove();\r\n    }\r\n\r\n    getSource() {\r\n        return this.map.getSource(this.sourceId);\r\n    }\r\n\r\n    gerLayer() {\r\n        return this.map.getLayer(this.layerId);\r\n    }\r\n}\r\n","export async function pause() {\r\n    return new Promise((resolve) => {\r\n        setTimeout(() => {\r\n            resolve();\r\n        }, 100);\r\n    });\r\n}\r\n","import { pause } from \"../utils/api-helpers\";\r\n\r\nexport class UserApi {\r\n    async sendInfoAboutIncludedZones(info) {\r\n        await pause();\r\n        console.log(info);\r\n    }\r\n}\r\n","import * as turf from \"@turf/turf\";\r\nimport { MarkerLayer, MarkerLayerEvents } from \"../layers/marker-layer\";\r\nimport { RadiusLayer } from \"../layers/radius-layer\";\r\nimport { createUserControllTable, setUserTableTitle, setUserTableZones, removeUserTable } from \"../utils/dom-helpers\";\r\nimport { getCircleByRadius, getZonePolygonByCoordinates, getDefaultUserData } from \"../utils/zone-helpers\";\r\nimport { UserApi } from \"../api/user-api\";\r\n\r\nexport class UserControll {\r\n    data = getDefaultUserData();\r\n\r\n    /**\r\n     *\r\n     * @param {import('./zone-controll').ZoneControll} zoneControll\r\n     */\r\n    constructor(zoneControll) {\r\n        this.zoneControll = zoneControll;\r\n        this.userApi = new UserApi();\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {mapboxgl.Map} map\r\n     */\r\n    onAdd(map) {\r\n        this.map = map;\r\n        this.container = document.createElement(\"div\");\r\n        this.container.className = \"mapboxgl-ctrl\";\r\n        this.enableUserMode();\r\n        return this.container;\r\n    }\r\n\r\n    onRemove() {\r\n        this.disableUserMode();\r\n        this.container.parentNode.removeChild(this.container);\r\n        this.map = undefined;\r\n    }\r\n\r\n    disableUserMode() {\r\n        if (this.markerLayer) this.markerLayer.remove();\r\n        if (this.radiusLayer) this.radiusLayer.remove();\r\n        this.map.off(\"click\", this.onMapClick);\r\n        removeUserTable();\r\n    }\r\n\r\n    enableUserMode() {\r\n        this.markerLayer = new MarkerLayer(this.map);\r\n        this.radiusLayer = new RadiusLayer(this.map);\r\n        this.markerLayer.on(MarkerLayerEvents.dragend, this.onDragEndMarker);\r\n        this.markerLayer.on(MarkerLayerEvents.radiusChanged, this.onRadiusChanged);\r\n        this.markerLayer.on(MarkerLayerEvents.buttonClick, this.onButtonClick);\r\n        this.map.once(\"click\", this.onMapClick);\r\n        createUserControllTable();\r\n        setUserTableTitle(\"Set point on the map\");\r\n    }\r\n\r\n    onButtonClick = async () => {\r\n        await this.userApi.sendInfoAboutIncludedZones(this.data);\r\n    };\r\n\r\n    findZonesInRadius() {\r\n        if (!this.data.lngLat || !this.data.radius) return;\r\n        const circle = getCircleByRadius(this.data.lngLat, this.data.radius);\r\n        const zones = this.zoneControll.getZoneList();\r\n        const intersectedZones = zones.filter((zone) => {\r\n            const polygon = getZonePolygonByCoordinates(zone.coordinates, zone.id);\r\n            const intersection = turf.intersect(circle, polygon);\r\n            return !!intersection;\r\n        });\r\n        this.data.zones = intersectedZones.map((el) => ({ name: el.name, id: el.id }));\r\n        setUserTableZones(intersectedZones);\r\n    }\r\n\r\n    onRadiusChanged = ({ radius }) => {\r\n        this.data.radius = radius;\r\n        this.updateRadiusLayer();\r\n        this.findZonesInRadius();\r\n    };\r\n\r\n    onDragEndMarker = ({ lngLat }) => {\r\n        this.data.lngLat = lngLat;\r\n        this.updateRadiusLayer();\r\n        this.findZonesInRadius();\r\n    };\r\n\r\n    updateRadiusLayer() {\r\n        if (!this.data.radius || !this.data.lngLat) return;\r\n        this.radiusLayer.update(this.data.radius, this.data.lngLat);\r\n    }\r\n\r\n    /**\r\n     * @param {mapboxgl.MapMouseEvent & mapboxgl.EventData} e\r\n     */\r\n    onMapClick = (e) => {\r\n        this.markerLayer.update(e.lngLat);\r\n        this.data.lngLat = e.lngLat;\r\n        this.findZonesInRadius();\r\n        this.updateRadiusLayer();\r\n        setUserTableTitle(\"You have selected the following zones:\");\r\n    };\r\n}\r\n","import { DEFAULT_ZONE_LAYER_COLOR } from \"../utils/constants\";\r\nimport { getZoneLineByCoordinates } from \"../utils/zone-helpers\";\r\n\r\nexport class ZoneStrokeLayer {\r\n    /**\r\n     *\r\n     * @param {mapboxgl.Map} map\r\n     * @param {string} id\r\n     */\r\n    constructor(map, id, options) {\r\n        const color = (options && options.color) || DEFAULT_ZONE_LAYER_COLOR;\r\n        this.map = map;\r\n        this.layerId = `zone-stroke-layer-${id}`;\r\n        this.sourceId = `zone-stroke-source-${id}`;\r\n        this.id = id;\r\n        this.color = color;\r\n    }\r\n\r\n    update(coordinates) {\r\n        this.addSource(coordinates);\r\n        this.addLayer();\r\n    }\r\n\r\n    setColor(color) {\r\n        this.color = color;\r\n        this.map.setPaintProperty(this.layerId, \"line-color\", color);\r\n    }\r\n\r\n    addSource(coordinates) {\r\n        const data = getZoneLineByCoordinates(coordinates, this.id);\r\n        if (!data) return;\r\n\r\n        const source = this.getSource();\r\n        if (source) {\r\n            return source.setData(data);\r\n        }\r\n\r\n        this.map.addSource(this.sourceId, { type: \"geojson\", data });\r\n    }\r\n\r\n    addLayer() {\r\n        if (this.gerLayer() || !this.getSource()) return;\r\n\r\n        this.map.addLayer({\r\n            id: this.layerId,\r\n            source: this.sourceId,\r\n            type: \"line\",\r\n            layout: {\r\n                \"line-join\": \"round\",\r\n                \"line-cap\": \"round\",\r\n            },\r\n            paint: {\r\n                \"line-color\": this.color,\r\n                \"line-width\": [\"interpolate\", [\"exponential\", 1.5], [\"zoom\"], 5, 1, 16, 6],\r\n            },\r\n        });\r\n    }\r\n\r\n    remove() {\r\n        if (this.gerLayer()) this.map.removeLayer(this.layerId);\r\n        if (this.getSource()) this.map.removeSource(this.sourceId);\r\n    }\r\n\r\n    getSource() {\r\n        return this.map.getSource(this.sourceId);\r\n    }\r\n\r\n    gerLayer() {\r\n        return this.map.getLayer(this.layerId);\r\n    }\r\n}\r\n","import { getCenterZoneByCoordinates } from \"../utils/zone-helpers\";\r\n\r\nexport class ZoneNameLayer {\r\n    /**\r\n     * @param {mapboxgl.Map} map\r\n     * @param {string} id\r\n     */\r\n    constructor(map, id, options) {\r\n        this.name = options && options.name ? options.name : \" \";\r\n        this.map = map;\r\n        this.layerId = `zone-name-layer-${id}`;\r\n        this.sourceId = `zone-name-source-${id}`;\r\n        this.id = id;\r\n    }\r\n\r\n    update(coordinates) {\r\n        this.addSource(coordinates);\r\n        this.addLayer();\r\n    }\r\n\r\n    addSource(coordinates) {\r\n        const data = getCenterZoneByCoordinates(coordinates);\r\n        if (!data) return;\r\n\r\n        const source = this.getSource();\r\n        if (source) {\r\n            return source.setData(data);\r\n        }\r\n\r\n        this.map.addSource(this.sourceId, { type: \"geojson\", data });\r\n    }\r\n\r\n    addLayer() {\r\n        if (this.gerLayer() || !this.getSource()) return;\r\n\r\n        this.map.addLayer({\r\n            id: this.layerId,\r\n            source: this.sourceId,\r\n            minzoom: 12,\r\n            type: \"symbol\",\r\n            layout: {\r\n                \"text-field\": this.name,\r\n                \"text-size\": [\"interpolate\", [\"exponential\", 1.5], [\"zoom\"], 12, 12, 18, 46],\r\n            },\r\n            paint: {\r\n                \"text-color\": \"white\",\r\n            },\r\n        });\r\n    }\r\n\r\n    remove() {\r\n        if (this.gerLayer()) this.map.removeLayer(this.layerId);\r\n        if (this.getSource()) this.map.removeSource(this.sourceId);\r\n    }\r\n\r\n    getSource() {\r\n        return this.map.getSource(this.sourceId);\r\n    }\r\n\r\n    gerLayer() {\r\n        return this.map.getLayer(this.layerId);\r\n    }\r\n}\r\n","import { getZonePolygonByCoordinates } from \"../utils/zone-helpers\";\r\nimport { DEFAULT_ZONE_LAYER_COLOR } from \"../utils/constants\";\r\nimport { ZoneStrokeLayer } from \"./zone-stroke-layer\";\r\nimport { ZoneNameLayer } from \"./zone-name-layer\";\r\n\r\nexport class ZoneLayer {\r\n    /**\r\n     * @param {mapboxgl.Map} map\r\n     * @param {string} id\r\n     */\r\n    constructor(map, id, options) {\r\n        this.map = map;\r\n        this.layerId = `zone-layer-${id}`;\r\n        this.sourceId = `zone-source-${id}`;\r\n        this.id = id;\r\n        this.color = (options && options.color) || DEFAULT_ZONE_LAYER_COLOR;\r\n        this.name = options && options.name;\r\n        this.strokeLayer = new ZoneStrokeLayer(map, id, options);\r\n        this.nameLayer = new ZoneNameLayer(map, id, options);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {number} radius\r\n     * @param {mapboxgl.LngLat} coor\r\n     */\r\n    update(coordinates, isEdit = false) {\r\n        this.addSource(coordinates);\r\n        this.addLayer();\r\n        this.strokeLayer.update(coordinates);\r\n        if (!isEdit) this.nameLayer.update(coordinates);\r\n    }\r\n\r\n    setColor(color) {\r\n        this.color = color;\r\n        this.map.setPaintProperty(this.layerId, \"fill-color\", color);\r\n        this.strokeLayer.setColor(color);\r\n    }\r\n\r\n    /**\r\n     * @param {number} radius\r\n     * @param {mapboxgl.LngLat} coor\r\n     */\r\n    addSource(coordinates) {\r\n        const data = getZonePolygonByCoordinates(coordinates, this.id);\r\n        if (!data) return;\r\n\r\n        const source = this.getSource();\r\n        if (source) {\r\n            return source.setData(data);\r\n        }\r\n\r\n        this.map.addSource(this.sourceId, { type: \"geojson\", data });\r\n    }\r\n\r\n    addLayer() {\r\n        if (this.gerLayer() || !this.getSource()) return;\r\n\r\n        this.map.addLayer({\r\n            id: this.layerId,\r\n            source: this.sourceId,\r\n            type: \"fill\",\r\n            layout: {},\r\n            paint: {\r\n                \"fill-color\": this.color,\r\n                \"fill-opacity\": 0.5,\r\n                \"fill-outline-color\": \"transparent\",\r\n            },\r\n        });\r\n    }\r\n\r\n    remove() {\r\n        if (this.gerLayer()) this.map.removeLayer(this.layerId);\r\n        if (this.getSource()) this.map.removeSource(this.sourceId);\r\n        this.strokeLayer.remove();\r\n        this.nameLayer.remove();\r\n    }\r\n\r\n    getSource() {\r\n        return this.map.getSource(this.sourceId);\r\n    }\r\n\r\n    gerLayer() {\r\n        return this.map.getLayer(this.layerId);\r\n    }\r\n}\r\n","export function enableMapInteraction(map) {\r\n    if (!map) return;\r\n    map.dragPan.enable();\r\n    map.boxZoom.enable();\r\n    map.scrollZoom.enable();\r\n    map.dragRotate.enable();\r\n    map.doubleClickZoom.enable();\r\n    map.touchZoomRotate.enable();\r\n    map.touchPitch.enable();\r\n}\r\n\r\nexport function disableMapInteraction(map) {\r\n    if (!map) return;\r\n    map.dragPan.disable();\r\n    map.boxZoom.disable();\r\n    map.scrollZoom.disable();\r\n    map.dragRotate.disable();\r\n    map.doubleClickZoom.disable();\r\n    map.touchZoomRotate.disable();\r\n    map.touchPitch.disable();\r\n}\r\n","import { pause } from \"../utils/api-helpers\";\r\n\r\nexport class ZoneApi {\r\n    localStoragekey = \"mapZones\";\r\n\r\n    async getZoneList() {\r\n        await pause();\r\n        const zones = localStorage.getItem(this.localStoragekey);\r\n        if (!zones) return;\r\n        return JSON.parse(zones);\r\n    }\r\n\r\n    async addZone(zone) {\r\n        await pause();\r\n        let newZones = [];\r\n        const zones = await this.getZoneList();\r\n        if (zones) newZones = [...zones];\r\n        newZones.push(zone);\r\n        const string = JSON.stringify(newZones);\r\n        localStorage.setItem(this.localStoragekey, string);\r\n    }\r\n\r\n    async updateZone(zone) {\r\n        await pause();\r\n        const zones = await this.getZoneList();\r\n        if (!zones) return;\r\n        const newZones = zones.map((el) => {\r\n            if (el.id === zone.id) return zone;\r\n            return el;\r\n        });\r\n        const string = JSON.stringify(newZones);\r\n        localStorage.setItem(this.localStoragekey, string);\r\n    }\r\n\r\n    async deleteZone(id) {\r\n        await pause();\r\n        const zones = await this.getZoneList();\r\n        if (!zones) return;\r\n        const newZones = zones.filter((el) => el.id !== id);\r\n        const string = JSON.stringify(newZones);\r\n        localStorage.setItem(this.localStoragekey, string);\r\n    }\r\n}\r\n","import mapboxgl from \"mapbox-gl\";\r\nimport _ from \"lodash\";\r\nimport { ZoneLayer } from \"../layers/zone-layer\";\r\nimport { generateUniqueId, getDefaultZone, getCenterZoneCoorByCoordinates } from \"../utils/zone-helpers\";\r\nimport { getPlusIconSvg, getEditIconSvg, getDeleteIconSvg } from \"../utils/svg-helpers\";\r\nimport { enableMapInteraction, disableMapInteraction } from \"../utils/map-helpers\";\r\nimport { CONTROL_BASE_CLASS_NAME, POPUP_BASE_CLASS_NAME, POPUP_CONTROLS_CLASS_NAME } from \"../utils/constants\";\r\nimport {\r\n    createControllButton,\r\n    removeActiveClassForButton,\r\n    addActiveClassForButton,\r\n    addElementListener,\r\n    getPopupInputColor,\r\n    getPopupButton,\r\n    getPopupTitle,\r\n    getPopupInputName,\r\n} from \"../utils/dom-helpers\";\r\nimport { ZoneApi } from \"../api/zone-api\";\r\n\r\nexport class AdminControll {\r\n    isCreateMode = false;\r\n    isEditMode = false;\r\n    isDeleteMode = false;\r\n    deleteZoneId = null;\r\n    editZoneId = null;\r\n    cacheZone = null;\r\n    newZone = getDefaultZone();\r\n\r\n    /** ID for elements */\r\n    popupCreateId = `${CONTROL_BASE_CLASS_NAME}__popup-create`;\r\n    popupCreateInputNameId = `${this.popupCreateId}-input-name`;\r\n    popupCreateInputColorId = `${this.popupCreateId}-input-color`;\r\n    popupCreateButtonSaveId = `${this.popupCreateId}-button-save`;\r\n    popupCreateButtonCancelId = `${this.popupCreateId}-button-cancel`;\r\n\r\n    popupDeleteId = `${CONTROL_BASE_CLASS_NAME}__popup-delete`;\r\n    popupDeleteButtonConfirmId = `${this.popupDeleteId}-button-confirm`;\r\n    popupDeleteButtonCancelId = `${this.popupDeleteId}-button-cancel`;\r\n\r\n    popupEditId = `${CONTROL_BASE_CLASS_NAME}__popup-edit`;\r\n    popupEditInputNameId = `${this.popupEditId}-input-name`;\r\n    popupEditInputColorId = `${this.popupEditId}-input-color`;\r\n    popupEditButtonSaveId = `${this.popupEditId}-button-save`;\r\n    popupEditButtonCancelId = `${this.popupEditId}-button-cancel`;\r\n    popupEditButtonGeometryId = `${this.popupEditId}-button-geometry`;\r\n\r\n    /** Patterns */\r\n    zoneLayerPatternId = /zone-layer-\\w/i;\r\n\r\n    /**\r\n     *\r\n     * @param {ZoneControll} zoneControll\r\n     */\r\n    constructor(zoneControll) {\r\n        this.zoneControll = zoneControll;\r\n        this.zoneApi = new ZoneApi();\r\n    }\r\n\r\n    /**\r\n     * @param {mapboxgl.Map} map\r\n     */\r\n    onAdd(map) {\r\n        this.map = map;\r\n        this.container = document.createElement(\"div\");\r\n        this.container.className = \"mapboxgl-ctrl mapboxgl-ctrl-group\";\r\n        this.createButton = createControllButton(getPlusIconSvg(), this.onClickCreateButton);\r\n        this.deleteButton = createControllButton(getDeleteIconSvg(), this.onClickDeleteButton);\r\n        this.editButton = createControllButton(getEditIconSvg(), this.onClickEditButton);\r\n        this.container.appendChild(this.createButton);\r\n        this.container.appendChild(this.deleteButton);\r\n        this.container.appendChild(this.editButton);\r\n        return this.container;\r\n    }\r\n\r\n    onRemove() {\r\n        this.container.parentNode.removeChild(this.container);\r\n        this.disableAllModes();\r\n        this.map = undefined;\r\n    }\r\n\r\n    //#region Edit zone\r\n\r\n    onClickEditButton = () => {\r\n        if (this.isEditMode) return this.disableEditMode();\r\n        this.disableAllModes();\r\n        this.enableEditMode();\r\n    };\r\n\r\n    addEditPopupListeners() {\r\n        addElementListener(this.popupEditInputNameId, \"change\", this.editZoneName);\r\n        addElementListener(this.popupEditInputColorId, \"change\", this.editZoneColor);\r\n        addElementListener(this.popupEditButtonSaveId, \"click\", this.onSaveEdit);\r\n        addElementListener(this.popupEditButtonCancelId, \"click\", this.cancelEditZone);\r\n        addElementListener(this.popupEditButtonGeometryId, \"click\", this.onGeometryEdit);\r\n    }\r\n\r\n    updateEditZoneLayer() {\r\n        if (!this.editZone || this.editZone.coordinates.length < 4) return;\r\n        this.zoneControll.updateZoneCoordinates(this.editZone.id, this.editZone.coordinates);\r\n    }\r\n\r\n    /**\r\n     * @param {mapboxgl.MapMouseEvent & mapboxgl.EventData} e\r\n     */\r\n    onMouseUpEdit = (e) => {\r\n        this.map.off(\"mousemove\", this.onMouseMoveEdit);\r\n        if (this.editZone) this.showEditPopup(this.editZone.id);\r\n        enableMapInteraction(this.map);\r\n    };\r\n\r\n    /**\r\n     * @param {mapboxgl.MapMouseEvent & mapboxgl.EventData} e\r\n     */\r\n    onMouseMoveEdit = (e) => {\r\n        if (!this.editZone) return;\r\n        this.editZone.coordinates.push(e.lngLat.toArray());\r\n        this.updateEditZoneLayer();\r\n    };\r\n\r\n    /**\r\n     * @param {mapboxgl.MapMouseEvent & mapboxgl.EventData} e\r\n     */\r\n    onMouseDownEdit = (e) => {\r\n        this.map.on(\"mousemove\", this.onMouseMoveEdit);\r\n        this.map.once(\"mouseup\", this.onMouseUpEdit);\r\n    };\r\n\r\n    onGeometryEdit = () => {\r\n        if (this.editPopup) this.editPopup.remove();\r\n        disableMapInteraction(this.map);\r\n        this.zoneControll.removeZoneLayer(this.editZone.id);\r\n        this.editZone.coordinates = [];\r\n        this.map.on(\"mousedown\", this.onMouseDownEdit);\r\n    };\r\n\r\n    cancelEditZone = () => {\r\n        this.zoneControll.drawZones();\r\n        if (this.editPopup) this.editPopup.remove();\r\n        this.editZone = null;\r\n    };\r\n\r\n    onSaveEdit = async () => {\r\n        await this.zoneControll.updateZone(this.editZone);\r\n\r\n        if (this.editPopup) this.editPopup.remove();\r\n        this.editZone = null;\r\n    };\r\n\r\n    editZoneColor = (e) => {\r\n        const color = e.target.value;\r\n        this.editZone.color = color;\r\n        this.zoneControll.updateZoneColor(this.editZone.id, color);\r\n    };\r\n\r\n    editZoneName = (e) => {\r\n        this.editZone.name = e.target.value;\r\n    };\r\n\r\n    getEditPopupContent({ name, color }) {\r\n        return `\r\n            <div class=\"${POPUP_BASE_CLASS_NAME}\">\r\n                ${getPopupInputName(name, this.popupEditInputNameId)}\r\n                ${getPopupInputColor(color, this.popupEditInputColorId)}\r\n                ${getPopupButton(\"Edit Geometry\", this.popupEditButtonGeometryId)}\r\n                <div class=\"${POPUP_CONTROLS_CLASS_NAME}\">\r\n                ${getPopupButton(\"Cancel\", this.popupEditButtonCancelId)}\r\n                ${getPopupButton(\"Save\", this.popupEditButtonSaveId)}\r\n                </div>\r\n            </div>`;\r\n    }\r\n\r\n    showEditPopup() {\r\n        const coor = getCenterZoneCoorByCoordinates(this.editZone.coordinates);\r\n        if (!coor) return;\r\n        this.editPopup = new mapboxgl.Popup({\r\n            closeButton: false,\r\n            closeOnClick: false,\r\n            closeOnMove: false,\r\n        })\r\n            .setLngLat(coor)\r\n            .setHTML(this.getEditPopupContent(this.editZone))\r\n            .addTo(this.map);\r\n        this.addEditPopupListeners();\r\n    }\r\n\r\n    onClickEdit = (e) => {\r\n        const feature = this.getZoneFeatureByEvent(e);\r\n        if (!feature) return;\r\n        const zoneId = feature.properties.id;\r\n        if (this.editZone && zoneId === this.editZone.id) return;\r\n        if (this.editPopup) this.editPopup.remove();\r\n        const zone = this.zoneControll.getZoneById(zoneId);\r\n        this.editZone = _.cloneDeep(zone);\r\n        this.showEditPopup();\r\n    };\r\n\r\n    enableEditMode = () => {\r\n        addActiveClassForButton(this.editButton);\r\n        this.addCursorPointerListener();\r\n        this.map.on(\"click\", this.onClickEdit);\r\n        this.isEditMode = true;\r\n    };\r\n\r\n    disableEditMode = () => {\r\n        removeActiveClassForButton(this.editButton);\r\n        this.removeCursorPointerListener();\r\n        this.map.off(\"click\", this.onClickEdit);\r\n        this.cancelEditZone();\r\n        this.editZone = null;\r\n        this.isEditMode = false;\r\n    };\r\n\r\n    //#endregion\r\n\r\n    //#region Create zone\r\n\r\n    onClickCreateButton = () => {\r\n        if (this.isCreateMode) return this.disableCreateMode();\r\n        this.disableAllModes();\r\n        this.enableCreateMode();\r\n    };\r\n\r\n    enableCreateMode() {\r\n        this.newZone = getDefaultZone();\r\n        const id = generateUniqueId();\r\n        this.newZone.id = id;\r\n        this.newZonelayer = new ZoneLayer(this.map, id);\r\n        this.map.once(\"mousedown\", this.onMouseDownCreate);\r\n        addActiveClassForButton(this.createButton);\r\n        disableMapInteraction(this.map);\r\n        this.isCreateMode = true;\r\n    }\r\n\r\n    disableCreateMode = () => {\r\n        this.newZone = getDefaultZone();\r\n        if (this.createPopup) this.createPopup.remove();\r\n        if (this.newZonelayer) this.newZonelayer.remove();\r\n        removeActiveClassForButton(this.createButton);\r\n        enableMapInteraction(this.map);\r\n        this.isCreateMode = false;\r\n    };\r\n\r\n    showCreatePopup() {\r\n        const coor = getCenterZoneCoorByCoordinates(this.newZone.coordinates);\r\n\r\n        if (!coor) return;\r\n\r\n        this.createPopup = new mapboxgl.Popup({\r\n            closeButton: false,\r\n            closeOnClick: false,\r\n            closeOnMove: false,\r\n        })\r\n            .setLngLat(coor)\r\n            .setHTML(this.getCreatePopupContent())\r\n            .addTo(this.map);\r\n        this.addCreatePopupListners();\r\n    }\r\n\r\n    setNewZoneName = (e) => {\r\n        this.newZone.name = e.target.value;\r\n    };\r\n\r\n    setNewZoneColor = (e) => {\r\n        this.newZone.color = e.target.value;\r\n        this.updateColorInNewZone();\r\n    };\r\n\r\n    addCreatePopupListners() {\r\n        addElementListener(this.popupCreateInputNameId, \"change\", this.setNewZoneName);\r\n        addElementListener(this.popupCreateInputColorId, \"change\", this.setNewZoneColor);\r\n        addElementListener(this.popupCreateButtonCancelId, \"click\", this.disableCreateMode);\r\n        addElementListener(this.popupCreateButtonSaveId, \"click\", this.createZone);\r\n    }\r\n\r\n    createZone = () => {\r\n        const zone = _.cloneDeep(this.newZone);\r\n        this.zoneControll.createZone(zone);\r\n        this.onClickCreateButton();\r\n        this.createPopup.remove();\r\n        this.newZonelayer.remove();\r\n        this.newZone = getDefaultZone();\r\n    };\r\n\r\n    updateColorInNewZone() {\r\n        this.newZonelayer.setColor(this.newZone.color);\r\n    }\r\n\r\n    getCreatePopupContent() {\r\n        const name = this.zoneControll.getNewZoneName();\r\n        this.newZone.name = name;\r\n        return `\r\n            <div class=${POPUP_BASE_CLASS_NAME}>\r\n                ${getPopupInputName(name, this.popupCreateInputNameId)}\r\n                ${getPopupInputColor(null, this.popupCreateInputColorId)}\r\n                <div class=\"${POPUP_CONTROLS_CLASS_NAME}\">\r\n                ${getPopupButton(\"Cancel\", this.popupCreateButtonCancelId)}\r\n                ${getPopupButton(\"Save\", this.popupCreateButtonSaveId)}\r\n                </div>\r\n            </div>`;\r\n    }\r\n\r\n    updateNewZoneLayer() {\r\n        if (this.newZone.coordinates.length < 4) return;\r\n        this.newZonelayer.update(this.newZone.coordinates, true);\r\n    }\r\n\r\n    /**\r\n     * @param {mapboxgl.MapMouseEvent & mapboxgl.EventData} e\r\n     */\r\n    onMouseUpCreate = (e) => {\r\n        this.map.off(\"mousemove\", this.onMouseMoveCreate);\r\n        this.showCreatePopup();\r\n    };\r\n\r\n    /**\r\n     * @param {mapboxgl.MapMouseEvent & mapboxgl.EventData} e\r\n     */\r\n    onMouseMoveCreate = (e) => {\r\n        this.newZone.coordinates.push(e.lngLat.toArray());\r\n        this.updateNewZoneLayer();\r\n    };\r\n\r\n    /**\r\n     * @param {mapboxgl.MapMouseEvent & mapboxgl.EventData} e\r\n     */\r\n    onMouseDownCreate = (e) => {\r\n        this.newZone.coordinates.push(e.lngLat.toArray());\r\n        this.map.on(\"mousemove\", this.onMouseMoveCreate);\r\n        this.map.once(\"mouseup\", this.onMouseUpCreate);\r\n    };\r\n\r\n    //#endregion\r\n\r\n    //#region Delete zone\r\n\r\n    getDeletePopupContent(zoneName) {\r\n        return `\r\n            <div class=${POPUP_BASE_CLASS_NAME}>\r\n                ${getPopupTitle(`Do you want to delete a zone ${zoneName}?`)}\r\n                <div class=\"${POPUP_CONTROLS_CLASS_NAME}\">\r\n                ${getPopupButton(\"Cancel\", this.popupDeleteButtonCancelId)}\r\n                ${getPopupButton(\"Delete\", this.popupDeleteButtonConfirmId)}\r\n                </div>\r\n            </div>`;\r\n    }\r\n\r\n    addDeletePopupListeners(zoneId) {\r\n        addElementListener(this.popupDeleteButtonConfirmId, \"click\", () => this.deleteZone(zoneId));\r\n        addElementListener(this.popupDeleteButtonCancelId, \"click\", this.cancelDeleteZone);\r\n    }\r\n\r\n    cancelDeleteZone = () => {\r\n        this.deletePopup.remove();\r\n    };\r\n\r\n    deleteZone = async (zoneId) => {\r\n        await this.zoneControll.deleteZone(zoneId);\r\n        this.deletePopup.remove();\r\n    };\r\n\r\n    showDeletePopup(zoneId) {\r\n        const zone = this.zoneControll.getZoneById(zoneId);\r\n\r\n        if (!zone) return;\r\n\r\n        const coor = getCenterZoneCoorByCoordinates(zone.coordinates);\r\n\r\n        if (!coor) return;\r\n\r\n        this.deletePopup = new mapboxgl.Popup({\r\n            closeButton: false,\r\n            closeOnClick: false,\r\n            closeOnMove: false,\r\n        })\r\n            .setLngLat(coor)\r\n            .setHTML(this.getDeletePopupContent(zone.name))\r\n            .addTo(this.map);\r\n        this.addDeletePopupListeners(zone.id);\r\n    }\r\n\r\n    onClickDeleteZone = (e) => {\r\n        const feature = this.getZoneFeatureByEvent(e);\r\n        if (!feature) return;\r\n        const zoneId = feature.properties.id;\r\n        if (zoneId === this.deleteZoneId) return;\r\n        if (this.deletePopup) this.deletePopup.remove();\r\n        this.showDeletePopup(zoneId);\r\n        this.deleteZoneId = zoneId;\r\n    };\r\n\r\n    enableDeletetingMode() {\r\n        this.map.on(\"click\", this.onClickDeleteZone);\r\n        addActiveClassForButton(this.deleteButton);\r\n        this.addCursorPointerListener();\r\n        this.isDeleteMode = true;\r\n    }\r\n\r\n    disableDeleteMode() {\r\n        this.map.off(\"click\", this.onClickDeleteZone);\r\n        removeActiveClassForButton(this.deleteButton);\r\n\r\n        if (this.deletePopup) {\r\n            this.deletePopup.remove();\r\n            this.deletePopup = null;\r\n        }\r\n\r\n        this.removeCursorPointerListener();\r\n        this.isDeleteMode = false;\r\n        this.deleteZoneId = null;\r\n    }\r\n\r\n    onClickDeleteButton = () => {\r\n        if (this.isDeleteMode) return this.disableDeleteMode();\r\n        this.disableAllModes();\r\n        this.enableDeletetingMode();\r\n    };\r\n\r\n    //#endregion\r\n\r\n    //#region Utils\r\n\r\n    cursorListener = (e) => {\r\n        const feature = this.getZoneFeatureByEvent(e);\r\n        if (feature) {\r\n            this.map.getCanvas().style.cursor = \"pointer\";\r\n        } else {\r\n            this.map.getCanvas().style.cursor = \"\";\r\n        }\r\n    };\r\n\r\n    addCursorPointerListener() {\r\n        this.map.on(\"mousemove\", this.cursorListener);\r\n    }\r\n\r\n    removeCursorPointerListener() {\r\n        this.map.off(\"mousemove\", this.cursorListener);\r\n    }\r\n\r\n    disableAllModes() {\r\n        if (this.isEditMode) this.disableEditMode();\r\n        if (this.isDeleteMode) this.disableDeleteMode();\r\n        if (this.isCreateMode) this.disableCreateMode();\r\n    }\r\n\r\n    getZoneFeatureByEvent(e) {\r\n        const features = this.map.queryRenderedFeatures(e.point);\r\n        if (!features.length) return;\r\n        const feature = features.shift();\r\n        if (!feature) return;\r\n        if (feature.layer.id.match(this.zoneLayerPatternId)) return feature;\r\n    }\r\n\r\n    //#endregion\r\n}\r\n","export function getDeleteIconSvg() {\r\n    return `\r\n\t<svg version=\"1.1\" viewBox=\"0 0 384 384\">\r\n\t\t<path\r\n\t\td=\"M64,341.333C64,364.907,83.093,384,106.667,384h170.667C300.907,384,320,364.907,320,341.333v-256H64V341.333z\" />\r\n\t\t<polygon\r\n\t\tpoints=\"266.667,21.333 245.333,0 138.667,0 117.333,21.333 42.667,21.333 42.667,64 341.333,64 341.333,21.333 \t\t\t\" />\r\n\t</svg>\r\n\t`;\r\n}\r\n\r\nexport function getEditIconSvg() {\r\n    return `\r\n\t<svg version=\"1.1\" viewBox=\"0 0 383.947 383.947\">\r\n\t\t<polygon points=\"0,303.947 0,383.947 80,383.947 316.053,147.893 236.053,67.893\" />\r\n\t\t<path\r\n\t\td=\"M377.707,56.053L327.893,6.24c-8.32-8.32-21.867-8.32-30.187,0l-39.04,39.04l80,80l39.04-39.04C386.027,77.92,386.027,64.373,377.707,56.053z\" />\r\n\t</svg>\r\n\t`;\r\n}\r\n\r\nexport function getPlusIconSvg() {\r\n    return `\r\n\t<svg version=\"1.1\" viewBox=\"0 0 42 42\">\r\n\t\t<path d=\"M37.059,16H26V4.941C26,2.224,23.718,0,21,0s-5,2.224-5,4.941V16H4.941C2.224,16,0,18.282,0,21s2.224,5,4.941,5H16v11.059\r\n\t\tC16,39.776,18.282,42,21,42s5-2.224,5-4.941V26h11.059C39.776,26,42,23.718,42,21S39.776,16,37.059,16z\" />\r\n\t</svg>\r\n\t`;\r\n}\r\n","import { ZoneApi } from \"../api/zone-api\";\r\nimport { ZoneLayer } from \"../layers/zone-layer\";\r\n\r\nexport class ZoneControll {\r\n    zones = [];\r\n    zoneApi = new ZoneApi();\r\n    layers = new Map();\r\n\r\n    /**\r\n     * @param {mapboxgl.Map} map\r\n     */\r\n    onAdd(map) {\r\n        this.map = map;\r\n        this.container = document.createElement(\"div\");\r\n        this.container.className = \"mapboxgl-ctrl\";\r\n        map.on(\"load\", this.init);\r\n        return this.container;\r\n    }\r\n\r\n    onRemove() {\r\n        this.container.parentNode.removeChild(this.container);\r\n        this.map = undefined;\r\n    }\r\n\r\n    init = async () => {\r\n        const zones = await this.zoneApi.getZoneList();\r\n        if (!zones) return;\r\n        this.zones = zones;\r\n        this.drawZones();\r\n    };\r\n\r\n    async deleteZone(zoneId) {\r\n        await this.zoneApi.deleteZone(zoneId);\r\n        this.zones = this.zones.filter((zone) => zone.id !== zoneId);\r\n        const layer = this.layers.get(zoneId);\r\n        if (!layer) return;\r\n        layer.remove();\r\n        this.layers.delete(zoneId);\r\n    }\r\n\r\n    async updateZone(newZone) {\r\n        await this.zoneApi.updateZone(newZone);\r\n\r\n        this.zones = this.zones.map((el) => {\r\n            if (el.id === newZone.id) return newZone;\r\n            return el;\r\n        });\r\n\r\n        this.drawZones();\r\n    }\r\n\r\n    async createZone(newZone) {\r\n        await this.zoneApi.addZone(newZone);\r\n        this.zones.push(newZone);\r\n        this.drawZones();\r\n    }\r\n\r\n    getZoneList() {\r\n        return this.zones;\r\n    }\r\n\r\n    getZoneById(zoneId) {\r\n        return this.zones.find((el) => el.id === zoneId);\r\n    }\r\n\r\n    updateZoneColor(zoneId, color) {\r\n        const layer = this.layers.get(zoneId);\r\n        if (!layer) return;\r\n        layer.setColor(color);\r\n    }\r\n\r\n    updateZoneCoordinates(zoneId, coordinates) {\r\n        const layer = this.layers.get(zoneId);\r\n        if (!layer) return;\r\n        layer.update(coordinates, true);\r\n    }\r\n\r\n    removeZoneLayer(zoneId) {\r\n        const layer = this.layers.get(zoneId);\r\n        if (layer) layer.remove();\r\n    }\r\n\r\n    getNewZoneName() {\r\n        return `Zone ${this.zones.length + 1}`;\r\n    }\r\n\r\n    drawZones() {\r\n        this.zones.forEach((zone) => {\r\n            const existLayer = this.layers.get(zone.id);\r\n            if (existLayer) {\r\n                existLayer.update(zone.coordinates);\r\n                existLayer.setColor(zone.color);\r\n            } else {\r\n                const layer = new ZoneLayer(this.map, zone.id, { color: zone.color, name: zone.name });\r\n                layer.update(zone.coordinates);\r\n                this.layers.set(zone.id, layer);\r\n            }\r\n        });\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport mapboxgl from \"mapbox-gl\";\r\nimport { UserControll } from \"./controls/user-controll\";\r\nimport { AdminControll } from \"./controls/admin-controll\";\r\nimport \"mapbox-gl/dist/mapbox-gl.css\";\r\nimport \"./index.scss\";\r\nimport { ZoneControll } from \"./controls/zone-controll\";\r\nimport { MAP_ID } from \"./utils/constants\";\r\n\r\nexport const Cities = {\r\n    Bengaluru: new mapboxgl.LngLat(77.59094323372614, 12.975557791300176),\r\n};\r\n\r\n/**\r\n * @typedef {object} Props\r\n * @prop {string} mapStyle\r\n * @prop {string} mapToken\r\n * @prop {boolean} isAdmin\r\n * @prop {mapboxgl.LngLat} cityCoor\r\n *\r\n * @extends {React.Component<Props>}\r\n */\r\nexport class MapWithZones extends React.Component {\r\n    componentDidMount() {\r\n        const { mapStyle, mapToken, isAdmin, cityCoor } = this.props;\r\n\r\n        mapboxgl.accessToken = mapToken;\r\n        const style = mapStyle || \"mapbox://styles/mapbox/streets-v11\";\r\n\r\n        this.map = new mapboxgl.Map({\r\n            container: MAP_ID,\r\n            style,\r\n            center: cityCoor,\r\n            zoom: 12,\r\n        });\r\n\r\n        this.zoneControll = new ZoneControll();\r\n        this.map.addControl(this.zoneControll);\r\n        this.userControll = new UserControll(this.zoneControll);\r\n        this.adminControll = new AdminControll(this.zoneControll);\r\n\r\n        if (isAdmin) {\r\n            this.map.addControl(this.adminControll);\r\n        } else {\r\n            this.map.addControl(this.userControll);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { isAdmin } = this.props;\r\n\r\n        if (isAdmin !== prevProps.isAdmin) {\r\n            if (!this.map) return;\r\n            if (isAdmin) {\r\n                this.map.removeControl(this.userControll);\r\n                this.map.addControl(this.adminControll);\r\n            } else {\r\n                this.map.removeControl(this.adminControll);\r\n                this.map.addControl(this.userControll);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <div id={MAP_ID} />;\r\n    }\r\n}\r\n","import React, { useState } from \"react\";\nimport { MapWithZones, Cities } from \"./map-with-zones\";\nimport \"./App.scss\";\n\nconst App = () => {\n    const [isAdmin, setIsAdmin] = useState(false);\n\n    return (\n        <div className=\"App\">\n            <div className=\"test-panel\">\n                <button onClick={() => setIsAdmin(true)} className={isAdmin ? \"test-panel__button-active\" : \"\"}>\n                    ADMIN MODE\n                </button>\n                <button onClick={() => setIsAdmin(false)} className={!isAdmin ? \"test-panel__button-active\" : \"\"}>\n                    USER MODE\n                </button>\n            </div>\n            <MapWithZones mapToken={process.env.REACT_APP_MAPBOX_TOKEN} cityCoor={Cities.Bengaluru} isAdmin={isAdmin} />\n        </div>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}