{"version":3,"sources":["map-with-zones/utils/constants.js","map-with-zones/utils/dom-helpers.js","map-with-zones/layers/marker-layer.js","map-with-zones/utils/zone-helpers.js","map-with-zones/layers/radius-stroke-layer.js","map-with-zones/layers/radius-layer.js","map-with-zones/utils/api-helpers.js","map-with-zones/api/user-api.js","map-with-zones/controls/user-controll.js","map-with-zones/layers/zone-stroke-layer.js","map-with-zones/layers/zone-name-layer.js","map-with-zones/layers/zone-layer.js","map-with-zones/utils/map-helpers.js","map-with-zones/api/zone-api.js","map-with-zones/controls/admin-controll.js","map-with-zones/utils/svg-helpers.js","map-with-zones/controls/zone-controll.js","map-with-zones/index.jsx","App.js","serviceWorker.js","index.js"],"names":["MAP_ID","CONTROL_BUTTON_CLASS_NAME","CONTROL_BUTTON_ACTIVE_CLASS_NAME","POPUP_BUTTON_CLASS_NAME","POPUP_INPUT_CLASS_NAME","POPUP_LABEL_CLASS_NAME","POPUP_TITLE_CLASS_NAME","POPUP_COLOR_CLASS_NAME","POPUP_CONTROLS_CLASS_NAME","TABLE_TITLE_CLASS_NAME","TABLE_ZONES_CLASS_NAME","createControllButton","content","callback","button","document","createElement","className","innerHTML","addEventListener","removeActiveClassForButton","classList","contains","remove","addActiveClassForButton","add","addElementListener","id","event","element","getElementById","getPopupInputColor","color","getPopupButton","text","getPopupInputName","name","setUserTableTitle","title","titleElement","innerText","setUserTableZones","zones","zoneElement","map","zone","join","MarkerLayerEvents","MarkerLayer","radiusInputId","radiusButtonId","onInputChange","e","fire","radius","Number","target","value","onDragEnd","lngLat","marker","getLngLat","onButtonClick","mapboxgl","Marker","draggable","popup","Popup","closeButton","closeOnClick","closeOnMove","setHTML","getPopupContent","this","coor","setLngLat","toArray","setPopup","addTo","togglePopup","subscribeToPopup","on","Evented","getCenterZoneByCoordinates","coordinates","length","line","turf","polygon","getCenterZoneCoorByCoordinates","center","getZonePolygonByCoordinates","getZoneLineByCoordinates","geometry","simlified","tolerance","getCircleByRadius","RadiusStrokeLayer","layerId","sourceId","addSource","addLayer","data","circle","getLineByRadius","source","getSource","setData","type","gerLayer","layout","paint","removeLayer","removeSource","getLayer","RadiusLayer","strokeLayer","update","pause","a","Promise","resolve","setTimeout","UserApi","info","console","log","UserControll","zoneControll","userApi","sendInfoAboutIncludedZones","onRadiusChanged","updateRadiusLayer","findZonesInRadius","onDragEndMarker","onMapClick","markerLayer","container","enableUserMode","disableUserMode","parentNode","removeChild","undefined","radiusLayer","off","table","removeUserTable","once","appendChild","createUserControllTable","intersectedZones","getZoneList","filter","el","ZoneStrokeLayer","options","setPaintProperty","ZoneNameLayer","setLayoutProperty","minzoom","ZoneLayer","nameLayer","isEdit","updateName","setColor","enableMapInteraction","dragPan","enable","boxZoom","scrollZoom","dragRotate","doubleClickZoom","touchZoomRotate","touchPitch","disableMapInteraction","disable","ZoneApi","localStoragekey","localStorage","getItem","JSON","parse","newZones","push","string","stringify","setItem","AdminControll","isCreateMode","isEditMode","isDeleteMode","deleteZoneId","editZoneId","cacheZone","newZone","popupCreateId","popupCreateInputNameId","popupCreateInputColorId","popupCreateButtonSaveId","popupCreateButtonCancelId","popupDeleteId","popupDeleteButtonConfirmId","popupDeleteButtonCancelId","popupEditId","popupEditInputNameId","popupEditInputColorId","popupEditButtonSaveId","popupEditButtonCancelId","popupEditButtonGeometryId","zoneLayerPatternId","onClickEditButton","disableEditMode","disableAllModes","enableEditMode","onMouseUpEdit","onMouseMoveEdit","editZone","showEditPopup","updateEditZoneLayer","onMouseDownEdit","onGeometryEdit","editPopup","removeZoneLayer","cancelEditZone","drawZones","onSaveEdit","updateZone","editZoneColor","updateZoneColor","editZoneName","onClickEdit","feature","getZoneFeatureByEvent","zoneId","properties","getZoneById","_","cloneDeep","editButton","addCursorPointerListener","removeCursorPointerListener","onClickCreateButton","disableCreateMode","enableCreateMode","createPopup","newZonelayer","createButton","setNewZoneName","setNewZoneColor","updateColorInNewZone","createZone","onMouseUpCreate","onMouseMoveCreate","showCreatePopup","updateNewZoneLayer","onMouseDownCreate","cancelDeleteZone","deletePopup","deleteZone","onClickDeleteZone","showDeletePopup","onClickDeleteButton","disableDeleteMode","enableDeletetingMode","cursorListener","getCanvas","style","cursor","zoneApi","deleteButton","updateZoneCoordinates","getEditPopupContent","addEditPopupListeners","Date","now","toString","Math","random","substr","getCreatePopupContent","addCreatePopupListners","getNewZoneName","zoneName","getDeletePopupContent","addDeletePopupListeners","features","queryRenderedFeatures","point","shift","layer","match","ZoneControll","layers","Map","init","get","delete","addZone","find","forEach","existLayer","set","Cities","Bengaluru","LngLat","MapWithZones","props","mapStyle","mapToken","isAdmin","cityCoor","accessToken","zoom","addControl","userControll","adminControll","prevProps","removeControl","React","Component","App","useState","setIsAdmin","onClick","process","Boolean","window","location","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.68c5f16a.chunk.js","sourcesContent":["export const DEFAULT_ZONE_LAYER_COLOR = \"#008888\";\r\nexport const DEFAULT_RADIUS_LAYER_COLOR = \"#292828\";\r\nexport const MAP_ID = \"mapbox-container-element-id\";\r\nexport const CONTROL_BASE_CLASS_NAME = \"map-controll\";\r\nexport const CONTROL_BUTTON_CLASS_NAME = `${CONTROL_BASE_CLASS_NAME}__button`;\r\nexport const CONTROL_BUTTON_ACTIVE_CLASS_NAME = `${CONTROL_BUTTON_CLASS_NAME}_active`;\r\nexport const POPUP_BASE_CLASS_NAME = \"map-popup\";\r\nexport const POPUP_BUTTON_CLASS_NAME = `${POPUP_BASE_CLASS_NAME}__button`;\r\nexport const POPUP_INPUT_CLASS_NAME = `${POPUP_BASE_CLASS_NAME}__input`;\r\nexport const POPUP_LABEL_CLASS_NAME = `${POPUP_BASE_CLASS_NAME}__label`;\r\nexport const POPUP_TITLE_CLASS_NAME = `${POPUP_BASE_CLASS_NAME}__title`;\r\nexport const POPUP_COLOR_CLASS_NAME = `${POPUP_BASE_CLASS_NAME}__color`;\r\nexport const POPUP_CONTROLS_CLASS_NAME = `${POPUP_BASE_CLASS_NAME}__controls`;\r\nexport const TABLE_BASE_CLASS_NAME = \"map-table\";\r\nexport const TABLE_TITLE_CLASS_NAME = `${TABLE_BASE_CLASS_NAME}__title`;\r\nexport const TABLE_ZONES_CLASS_NAME = `${TABLE_BASE_CLASS_NAME}__zones`;\r\n","import {\r\n    CONTROL_BUTTON_CLASS_NAME,\r\n    CONTROL_BUTTON_ACTIVE_CLASS_NAME,\r\n    POPUP_LABEL_CLASS_NAME,\r\n    DEFAULT_ZONE_LAYER_COLOR,\r\n    POPUP_BUTTON_CLASS_NAME,\r\n    POPUP_TITLE_CLASS_NAME,\r\n    POPUP_INPUT_CLASS_NAME,\r\n    POPUP_COLOR_CLASS_NAME,\r\n    TABLE_BASE_CLASS_NAME,\r\n    TABLE_TITLE_CLASS_NAME,\r\n    TABLE_ZONES_CLASS_NAME,\r\n    MAP_ID,\r\n} from \"./constants\";\r\n\r\nexport function createControllButton(content, callback) {\r\n    const button = document.createElement(\"button\");\r\n    button.className = CONTROL_BUTTON_CLASS_NAME;\r\n    button.innerHTML = content;\r\n    button.addEventListener(\"click\", callback);\r\n    return button;\r\n}\r\n\r\nexport function removeActiveClassForButton(button) {\r\n    if (button.classList.contains(CONTROL_BUTTON_ACTIVE_CLASS_NAME)) {\r\n        button.classList.remove(CONTROL_BUTTON_ACTIVE_CLASS_NAME);\r\n    }\r\n}\r\n\r\nexport function addActiveClassForButton(button) {\r\n    if (!button.classList.contains(CONTROL_BUTTON_ACTIVE_CLASS_NAME)) {\r\n        button.classList.add(CONTROL_BUTTON_ACTIVE_CLASS_NAME);\r\n    }\r\n}\r\n\r\nexport function addElementListener(id, event, callback) {\r\n    const element = document.getElementById(id);\r\n    if (element) {\r\n        element.addEventListener(event, callback);\r\n    }\r\n}\r\n\r\nexport function removeElementListener(id, event, callback) {\r\n    const element = document.getElementById(id);\r\n    if (element) {\r\n        element.removeEventListener(event, callback);\r\n    }\r\n}\r\n\r\nexport function getPopupInputColor(color, id) {\r\n    return `\r\n        <div class=\"${POPUP_COLOR_CLASS_NAME}\">\r\n            <label for=\"${id}\" class=\"${POPUP_LABEL_CLASS_NAME}\">Select zone color:</label>\r\n            <input type=\"color\" id=\"${id}\" value=\"${color || DEFAULT_ZONE_LAYER_COLOR}\" />\r\n        </div>\r\n        `;\r\n}\r\n\r\nexport function getPopupButton(text, id) {\r\n    return `<button id=\"${id}\" class=\"${POPUP_BUTTON_CLASS_NAME}\">${text || \" \"}</button>`;\r\n}\r\n\r\nexport function getPopupTitle(title) {\r\n    return `<span class=\"${POPUP_TITLE_CLASS_NAME}\">${title || \" \"}</span>`;\r\n}\r\n\r\nexport function getPopupInputName(name, id) {\r\n    return `\r\n        <label for=${id} class=\"${POPUP_LABEL_CLASS_NAME}\">Enter zone name:</label></br>\r\n        <input type=\"text\" id=\"${id}\" value=\"${name || \" \"}\" class=\"${POPUP_INPUT_CLASS_NAME}\" /></br>`;\r\n}\r\n\r\nexport function getPopupInputRadius(radius, id) {\r\n    return `\r\n        <label for=${id} class=\"${POPUP_LABEL_CLASS_NAME}\">Enter radius (km):</label></br>\r\n        <input type=\"number\" id=\"${id}\" value=\"${radius || 0}\" class=\"${POPUP_INPUT_CLASS_NAME}\" /></br>`;\r\n}\r\n\r\nexport function createUserControllTable() {\r\n    const map = document.getElementById(MAP_ID);\r\n\r\n    if (!map) return;\r\n\r\n    const table = document.createElement(\"div\");\r\n    table.className = TABLE_BASE_CLASS_NAME;\r\n    table.id = TABLE_BASE_CLASS_NAME;\r\n\r\n    const title = document.createElement(\"span\");\r\n    title.className = TABLE_TITLE_CLASS_NAME;\r\n    title.id = TABLE_TITLE_CLASS_NAME;\r\n\r\n    const zones = document.createElement(\"div\");\r\n    zones.className = TABLE_ZONES_CLASS_NAME;\r\n    zones.id = TABLE_ZONES_CLASS_NAME;\r\n\r\n    table.appendChild(title);\r\n    table.appendChild(zones);\r\n    map.appendChild(table);\r\n}\r\n\r\nexport function removeUserTable() {\r\n    const table = document.getElementById(TABLE_BASE_CLASS_NAME);\r\n    if (!table) return;\r\n    table.remove();\r\n}\r\n\r\nexport function setUserTableTitle(title) {\r\n    const titleElement = document.getElementById(TABLE_TITLE_CLASS_NAME);\r\n    if (!titleElement) return;\r\n    titleElement.innerText = title;\r\n}\r\n\r\nexport function setUserTableZones(zones) {\r\n    const zoneElement = document.getElementById(TABLE_ZONES_CLASS_NAME);\r\n    if (!zoneElement) return;\r\n    zoneElement.innerHTML = zones.map((zone) => `<span>${zone.name}</span>`).join(\" \");\r\n}\r\n","import mapboxgl from \"mapbox-gl\";\r\nimport { POPUP_BASE_CLASS_NAME, POPUP_CONTROLS_CLASS_NAME } from \"../utils/constants\";\r\nimport { getPopupInputRadius, getPopupButton, addElementListener } from \"../utils/dom-helpers\";\r\n\r\nexport const MarkerLayerEvents = {\r\n    dragend: \"dragend\",\r\n    radiusChanged: \"radiusChanged\",\r\n    buttonClick: \"buttonClick\",\r\n};\r\n\r\nexport class MarkerLayer extends mapboxgl.Evented {\r\n    radiusInputId = \"marker-input-radius\";\r\n    radiusButtonId = \"marker-button-radius\";\r\n\r\n    /**\r\n     *\r\n     * @param {mapboxgl.Map} map\r\n     */\r\n    constructor(map) {\r\n        super();\r\n        this.map = map;\r\n\r\n        /** @type{mapboxgl.Marker} */\r\n        this.marker = new mapboxgl.Marker({\r\n            draggable: true,\r\n        });\r\n\r\n        /** @type{mapboxgl.Popup} */\r\n        this.popup = new mapboxgl.Popup({ closeButton: false, closeOnClick: false, closeOnMove: false }).setHTML(\r\n            this.getPopupContent(),\r\n        );\r\n    }\r\n\r\n    subscribeToPopup() {\r\n        addElementListener(this.radiusInputId, \"change\", this.onInputChange);\r\n        addElementListener(this.radiusButtonId, \"click\", this.onButtonClick);\r\n    }\r\n\r\n    getPopupContent() {\r\n        return `\r\n        <div class=${POPUP_BASE_CLASS_NAME}>\r\n            ${getPopupInputRadius(1, this.radiusInputId)}\r\n            <div class=\"${POPUP_CONTROLS_CLASS_NAME}\">\r\n                ${getPopupButton(\"Select\", this.radiusButtonId)}\r\n            </div>\r\n        </div>\r\n        `;\r\n    }\r\n\r\n    remove() {\r\n        if (this.marker) this.marker.remove();\r\n        if (this.popup) this.popup.remove();\r\n    }\r\n\r\n    /**\r\n     * @param {mapboxgl.LngLat} coor\r\n     */\r\n    update(coor) {\r\n        this.marker.setLngLat(coor.toArray());\r\n        this.marker.setPopup(this.popup);\r\n        this.marker.addTo(this.map);\r\n        this.marker.togglePopup();\r\n        this.subscribeToPopup();\r\n        this.marker.on(\"dragend\", this.onDragEnd);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {import(\"react\").ChangeEvent<HTMLInputElement>} e\r\n     */\r\n    onInputChange = (e) => {\r\n        this.fire(MarkerLayerEvents.radiusChanged, { radius: Number(e.target.value) });\r\n    };\r\n\r\n    onDragEnd = () => {\r\n        const lngLat = this.marker.getLngLat();\r\n        this.fire(MarkerLayerEvents.dragend, { lngLat });\r\n    };\r\n\r\n    onButtonClick = () => {\r\n        this.fire(MarkerLayerEvents.buttonClick);\r\n    }\r\n}\r\n","import * as turf from \"@turf/turf\";\r\nimport { DEFAULT_ZONE_LAYER_COLOR } from \"./constants\";\r\n\r\nexport function generateUniqueId() {\r\n    return Date.now().toString(36) + Math.random().toString(36).substr(2);\r\n}\r\n\r\nexport function getDefaultZone() {\r\n    return {\r\n        name: \"\",\r\n        color: DEFAULT_ZONE_LAYER_COLOR,\r\n        id: null,\r\n        coordinates: [],\r\n    };\r\n}\r\n\r\nexport function getDefaultUserData() {\r\n    return {\r\n        lngLat: null,\r\n        radius: 1,\r\n        zones: [],\r\n    };\r\n}\r\n\r\nexport function getCenterZoneByCoordinates(coordinates) {\r\n    if (coordinates.length < 2) return;\r\n    const line = turf.lineString(coordinates);\r\n    const polygon = turf.lineToPolygon(line);\r\n    const center = turf.centerOfMass(polygon);\r\n    return center;\r\n}\r\n\r\nexport function getCenterZoneCoorByCoordinates(coordinates) {\r\n    const center = getCenterZoneByCoordinates(coordinates);\r\n    if (!center) return;\r\n    const coor = turf.getCoord(center);\r\n    return coor;\r\n}\r\n\r\nexport function getZonePolygonByCoordinates(coordinates, id) {\r\n    const line = getZoneLineByCoordinates(coordinates, id);\r\n    if (!line || line.geometry.coordinates.length < 4) return;\r\n    return turf.lineToPolygon(line);\r\n}\r\n\r\nexport function getZoneLineByCoordinates(coordinates, id) {\r\n    const line = turf.lineString(coordinates, { id });\r\n    const simlified = turf.simplify(line, { tolerance: 0.00001 });\r\n    if (simlified.geometry.coordinates.length < 4) return;\r\n    const polygon = turf.lineToPolygon(simlified);\r\n    const polygonedLine = turf.polygonToLine(polygon);\r\n    return polygonedLine;\r\n}\r\n\r\nexport function getCircleByRadius(center, radius) {\r\n    return turf.circle(center.toArray(), radius);\r\n}\r\n\r\nexport function getLineByRadius(center, radius) {\r\n    if (!center || !radius) return;\r\n    const circle = turf.circle(center.toArray(), radius);\r\n    return turf.polygonToLine(circle);\r\n}\r\n","import { getLineByRadius } from \"../utils/zone-helpers\";\r\nimport { DEFAULT_RADIUS_LAYER_COLOR } from \"../utils/constants\";\r\n\r\nexport class RadiusStrokeLayer {\r\n    /**\r\n     * @param {mapboxgl.Map} map\r\n     * @param {string} id\r\n     */\r\n    constructor(map) {\r\n        this.map = map;\r\n        this.layerId = `radius-stroke-layer`;\r\n        this.sourceId = `radius-stroke-source`;\r\n    }\r\n\r\n    update(radius, coor) {\r\n        this.addSource(radius, coor);\r\n        this.addLayer();\r\n    }\r\n\r\n    addSource(radius, coor) {\r\n        const data = getLineByRadius(coor, radius);\r\n        if (!data) return;\r\n\r\n        const source = this.getSource();\r\n        if (source) {\r\n            return source.setData(data);\r\n        }\r\n\r\n        this.map.addSource(this.sourceId, { type: \"geojson\", data });\r\n    }\r\n\r\n    addLayer() {\r\n        if (this.gerLayer() || !this.getSource()) return;\r\n\r\n        this.map.addLayer({\r\n            id: this.layerId,\r\n            source: this.sourceId,\r\n            type: \"line\",\r\n            layout: {\r\n                \"line-join\": \"round\",\r\n                \"line-cap\": \"round\",\r\n            },\r\n            paint: {\r\n                \"line-color\": DEFAULT_RADIUS_LAYER_COLOR,\r\n                \"line-width\": [\"interpolate\", [\"exponential\", 1.5], [\"zoom\"], 5, 1, 16, 6],\r\n                \"line-dasharray\": [5, 3],\r\n            },\r\n        });\r\n    }\r\n\r\n    remove() {\r\n        if (this.gerLayer()) this.map.removeLayer(this.layerId);\r\n        if (this.getSource()) this.map.removeSource(this.sourceId);\r\n    }\r\n\r\n    getSource() {\r\n        return this.map.getSource(this.sourceId);\r\n    }\r\n\r\n    gerLayer() {\r\n        return this.map.getLayer(this.layerId);\r\n    }\r\n}\r\n","import { getCircleByRadius } from \"../utils/zone-helpers\";\r\nimport { DEFAULT_RADIUS_LAYER_COLOR } from \"../utils/constants\";\r\nimport { RadiusStrokeLayer } from \"./radius-stroke-layer\";\r\n\r\nexport class RadiusLayer {\r\n    layerId = \"radius-layer\";\r\n    sourceId = \"radius-source\";\r\n\r\n    /**\r\n     *\r\n     * @param {mapboxgl.Map} map\r\n     */\r\n    constructor(map) {\r\n        this.map = map;\r\n        this.strokeLayer = new RadiusStrokeLayer(map);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {number} radius\r\n     * @param {mapboxgl.LngLat} coor\r\n     */\r\n    update(radius, coor) {\r\n        if (radius > 0) {\r\n            this.addSource(radius, coor);\r\n            this.addLayer();\r\n            this.strokeLayer.update(radius, coor);\r\n        } else {\r\n            this.remove();\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {number} radius\r\n     * @param {mapboxgl.LngLat} coor\r\n     */\r\n    addSource(radius, coor) {\r\n        const source = this.getSource();\r\n        const data = getCircleByRadius(coor, radius);\r\n        if (source) {\r\n            source.setData(data);\r\n        } else {\r\n            this.map.addSource(this.sourceId, { type: \"geojson\", data });\r\n        }\r\n    }\r\n\r\n    addLayer() {\r\n        if (this.gerLayer()) return;\r\n\r\n        this.map.addLayer({\r\n            id: this.layerId,\r\n            source: this.sourceId,\r\n            type: \"fill\",\r\n            paint: {\r\n                \"fill-color\": DEFAULT_RADIUS_LAYER_COLOR,\r\n                \"fill-opacity\": 0.4,\r\n            },\r\n        });\r\n    }\r\n\r\n    remove() {\r\n        if (this.gerLayer()) this.map.removeLayer(this.layerId);\r\n        if (this.getSource()) this.map.removeSource(this.sourceId);\r\n        this.strokeLayer.remove();\r\n    }\r\n\r\n    getSource() {\r\n        return this.map.getSource(this.sourceId);\r\n    }\r\n\r\n    gerLayer() {\r\n        return this.map.getLayer(this.layerId);\r\n    }\r\n}\r\n","export async function pause() {\r\n    return new Promise((resolve) => {\r\n        setTimeout(() => {\r\n            resolve();\r\n        }, 100);\r\n    });\r\n}\r\n","import { pause } from \"../utils/api-helpers\";\r\n\r\nexport class UserApi {\r\n    async sendInfoAboutIncludedZones(info) {\r\n        await pause();\r\n        console.log(info);\r\n    }\r\n}\r\n","import * as turf from \"@turf/turf\";\r\nimport { MarkerLayer, MarkerLayerEvents } from \"../layers/marker-layer\";\r\nimport { RadiusLayer } from \"../layers/radius-layer\";\r\nimport { createUserControllTable, setUserTableTitle, setUserTableZones, removeUserTable } from \"../utils/dom-helpers\";\r\nimport { getCircleByRadius, getZonePolygonByCoordinates, getDefaultUserData } from \"../utils/zone-helpers\";\r\nimport { UserApi } from \"../api/user-api\";\r\n\r\nexport class UserControll {\r\n    data = getDefaultUserData();\r\n\r\n    /**\r\n     * @param {import('./zone-controll').ZoneControll} zoneControll\r\n     */\r\n    constructor(zoneControll) {\r\n        this.zoneControll = zoneControll;\r\n        this.userApi = new UserApi();\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {mapboxgl.Map} map\r\n     */\r\n    onAdd(map) {\r\n        this.map = map;\r\n        this.container = document.createElement(\"div\");\r\n        this.container.className = \"mapboxgl-ctrl\";\r\n        this.enableUserMode();\r\n        return this.container;\r\n    }\r\n\r\n    onRemove() {\r\n        this.disableUserMode();\r\n        this.container.parentNode.removeChild(this.container);\r\n        this.data = getDefaultUserData();\r\n        this.map = undefined;\r\n    }\r\n\r\n    disableUserMode() {\r\n        if (this.markerLayer) this.markerLayer.remove();\r\n        if (this.radiusLayer) this.radiusLayer.remove();\r\n        this.map.off(\"click\", this.onMapClick);\r\n        removeUserTable();\r\n    }\r\n\r\n    enableUserMode() {\r\n        this.markerLayer = new MarkerLayer(this.map);\r\n        this.radiusLayer = new RadiusLayer(this.map);\r\n        this.markerLayer.on(MarkerLayerEvents.dragend, this.onDragEndMarker);\r\n        this.markerLayer.on(MarkerLayerEvents.radiusChanged, this.onRadiusChanged);\r\n        this.markerLayer.on(MarkerLayerEvents.buttonClick, this.onButtonClick);\r\n        this.map.once(\"click\", this.onMapClick);\r\n        createUserControllTable();\r\n        setUserTableTitle(\"Set point on the map\");\r\n    }\r\n\r\n    onButtonClick = async () => {\r\n        await this.userApi.sendInfoAboutIncludedZones(this.data);\r\n    };\r\n\r\n    findZonesInRadius() {\r\n        if (!this.data.lngLat || !this.data.radius) {\r\n            return setUserTableZones([]);\r\n        }\r\n        const circle = getCircleByRadius(this.data.lngLat, this.data.radius);\r\n        const zones = this.zoneControll.getZoneList();\r\n        const intersectedZones = zones.filter((zone) => {\r\n            const polygon = getZonePolygonByCoordinates(zone.coordinates, zone.id);\r\n            const intersection = turf.intersect(circle, polygon);\r\n            return !!intersection;\r\n        });\r\n        this.data.zones = intersectedZones.map((el) => ({ name: el.name, id: el.id }));\r\n        setUserTableZones(intersectedZones);\r\n    }\r\n\r\n    onRadiusChanged = ({ radius }) => {\r\n        this.data.radius = radius;\r\n        this.updateRadiusLayer();\r\n        this.findZonesInRadius();\r\n    };\r\n\r\n    onDragEndMarker = ({ lngLat }) => {\r\n        this.data.lngLat = lngLat;\r\n        this.updateRadiusLayer();\r\n        this.findZonesInRadius();\r\n    };\r\n\r\n    updateRadiusLayer() {\r\n        if (!this.data.lngLat) return;\r\n        this.radiusLayer.update(this.data.radius, this.data.lngLat);\r\n    }\r\n\r\n    /**\r\n     * @param {mapboxgl.MapMouseEvent & mapboxgl.EventData} e\r\n     */\r\n    onMapClick = (e) => {\r\n        this.markerLayer.update(e.lngLat);\r\n        this.data.lngLat = e.lngLat;\r\n        this.findZonesInRadius();\r\n        this.updateRadiusLayer();\r\n        setUserTableTitle(\"You have selected the following zones:\");\r\n    };\r\n}\r\n","import { DEFAULT_ZONE_LAYER_COLOR } from \"../utils/constants\";\r\nimport { getZoneLineByCoordinates } from \"../utils/zone-helpers\";\r\n\r\nexport class ZoneStrokeLayer {\r\n    /**\r\n     *\r\n     * @param {mapboxgl.Map} map\r\n     * @param {string} id\r\n     */\r\n    constructor(map, id, options) {\r\n        const color = (options && options.color) || DEFAULT_ZONE_LAYER_COLOR;\r\n        this.map = map;\r\n        this.layerId = `zone-stroke-layer-${id}`;\r\n        this.sourceId = `zone-stroke-source-${id}`;\r\n        this.id = id;\r\n        this.color = color;\r\n    }\r\n\r\n    update(coordinates) {\r\n        this.addSource(coordinates);\r\n        this.addLayer();\r\n    }\r\n\r\n    setColor(color) {\r\n        this.color = color;\r\n        this.map.setPaintProperty(this.layerId, \"line-color\", color);\r\n    }\r\n\r\n    addSource(coordinates) {\r\n        const data = getZoneLineByCoordinates(coordinates, this.id);\r\n        if (!data) return;\r\n\r\n        const source = this.getSource();\r\n        if (source) {\r\n            return source.setData(data);\r\n        }\r\n\r\n        this.map.addSource(this.sourceId, { type: \"geojson\", data });\r\n    }\r\n\r\n    addLayer() {\r\n        if (this.gerLayer() || !this.getSource()) return;\r\n\r\n        this.map.addLayer({\r\n            id: this.layerId,\r\n            source: this.sourceId,\r\n            type: \"line\",\r\n            layout: {\r\n                \"line-join\": \"round\",\r\n                \"line-cap\": \"round\",\r\n            },\r\n            paint: {\r\n                \"line-color\": this.color,\r\n                \"line-width\": [\"interpolate\", [\"exponential\", 1.5], [\"zoom\"], 5, 1, 16, 6],\r\n            },\r\n        });\r\n    }\r\n\r\n    remove() {\r\n        if (this.gerLayer()) this.map.removeLayer(this.layerId);\r\n        if (this.getSource()) this.map.removeSource(this.sourceId);\r\n    }\r\n\r\n    getSource() {\r\n        return this.map.getSource(this.sourceId);\r\n    }\r\n\r\n    gerLayer() {\r\n        return this.map.getLayer(this.layerId);\r\n    }\r\n}\r\n","import { getCenterZoneByCoordinates } from \"../utils/zone-helpers\";\r\n\r\nexport class ZoneNameLayer {\r\n    /**\r\n     * @param {mapboxgl.Map} map\r\n     * @param {string} id\r\n     */\r\n    constructor(map, id, options) {\r\n        this.name = options && options.name ? options.name : \" \";\r\n        this.map = map;\r\n        this.layerId = `zone-name-layer-${id}`;\r\n        this.sourceId = `zone-name-source-${id}`;\r\n        this.id = id;\r\n    }\r\n\r\n    updateName(name) {\r\n        this.name = name;\r\n        this.map.setLayoutProperty(this.layerId, \"text-field\", name);\r\n    }\r\n\r\n    update(coordinates) {\r\n        this.addSource(coordinates);\r\n        this.addLayer();\r\n    }\r\n\r\n    addSource(coordinates) {\r\n        const data = getCenterZoneByCoordinates(coordinates);\r\n        if (!data) return;\r\n\r\n        const source = this.getSource();\r\n        if (source) {\r\n            return source.setData(data);\r\n        }\r\n\r\n        this.map.addSource(this.sourceId, { type: \"geojson\", data });\r\n    }\r\n\r\n    addLayer() {\r\n        if (this.gerLayer() || !this.getSource()) return;\r\n\r\n        this.map.addLayer({\r\n            id: this.layerId,\r\n            source: this.sourceId,\r\n            minzoom: 12,\r\n            type: \"symbol\",\r\n            layout: {\r\n                \"text-field\": this.name,\r\n                \"text-size\": [\"interpolate\", [\"exponential\", 1.5], [\"zoom\"], 12, 12, 18, 46],\r\n            },\r\n            paint: {\r\n                \"text-color\": \"white\",\r\n            },\r\n        });\r\n    }\r\n\r\n    remove() {\r\n        if (this.gerLayer()) this.map.removeLayer(this.layerId);\r\n        if (this.getSource()) this.map.removeSource(this.sourceId);\r\n    }\r\n\r\n    getSource() {\r\n        return this.map.getSource(this.sourceId);\r\n    }\r\n\r\n    gerLayer() {\r\n        return this.map.getLayer(this.layerId);\r\n    }\r\n}\r\n","import { getZonePolygonByCoordinates } from \"../utils/zone-helpers\";\r\nimport { DEFAULT_ZONE_LAYER_COLOR } from \"../utils/constants\";\r\nimport { ZoneStrokeLayer } from \"./zone-stroke-layer\";\r\nimport { ZoneNameLayer } from \"./zone-name-layer\";\r\n\r\nexport class ZoneLayer {\r\n    /**\r\n     * @param {mapboxgl.Map} map\r\n     * @param {string} id\r\n     */\r\n    constructor(map, id, options) {\r\n        this.map = map;\r\n        this.layerId = `zone-layer-${id}`;\r\n        this.sourceId = `zone-source-${id}`;\r\n        this.id = id;\r\n        this.color = (options && options.color) || DEFAULT_ZONE_LAYER_COLOR;\r\n        this.strokeLayer = new ZoneStrokeLayer(map, id, options);\r\n        this.nameLayer = new ZoneNameLayer(map, id, options);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {number} radius\r\n     * @param {mapboxgl.LngLat} coor\r\n     */\r\n    update(coordinates, isEdit = false) {\r\n        this.addSource(coordinates);\r\n        this.addLayer();\r\n        this.strokeLayer.update(coordinates);\r\n        if (!isEdit) this.nameLayer.update(coordinates);\r\n    }\r\n\r\n    updateName(name) {\r\n        this.nameLayer.updateName(name);\r\n    }\r\n\r\n    setColor(color) {\r\n        this.color = color;\r\n        this.map.setPaintProperty(this.layerId, \"fill-color\", color);\r\n        this.strokeLayer.setColor(color);\r\n    }\r\n\r\n    /**\r\n     * @param {number} radius\r\n     * @param {mapboxgl.LngLat} coor\r\n     */\r\n    addSource(coordinates) {\r\n        const data = getZonePolygonByCoordinates(coordinates, this.id);\r\n        if (!data) return;\r\n\r\n        const source = this.getSource();\r\n        if (source) {\r\n            return source.setData(data);\r\n        }\r\n\r\n        this.map.addSource(this.sourceId, { type: \"geojson\", data });\r\n    }\r\n\r\n    addLayer() {\r\n        if (this.gerLayer() || !this.getSource()) return;\r\n\r\n        this.map.addLayer({\r\n            id: this.layerId,\r\n            source: this.sourceId,\r\n            type: \"fill\",\r\n            layout: {},\r\n            paint: {\r\n                \"fill-color\": this.color,\r\n                \"fill-opacity\": 0.5,\r\n                \"fill-outline-color\": \"transparent\",\r\n            },\r\n        });\r\n    }\r\n\r\n    remove() {\r\n        if (this.gerLayer()) this.map.removeLayer(this.layerId);\r\n        if (this.getSource()) this.map.removeSource(this.sourceId);\r\n        this.strokeLayer.remove();\r\n        this.nameLayer.remove();\r\n    }\r\n\r\n    getSource() {\r\n        return this.map.getSource(this.sourceId);\r\n    }\r\n\r\n    gerLayer() {\r\n        return this.map.getLayer(this.layerId);\r\n    }\r\n}\r\n","export function enableMapInteraction(map) {\r\n    if (!map) return;\r\n    map.dragPan.enable();\r\n    map.boxZoom.enable();\r\n    map.scrollZoom.enable();\r\n    map.dragRotate.enable();\r\n    map.doubleClickZoom.enable();\r\n    map.touchZoomRotate.enable();\r\n    map.touchPitch.enable();\r\n}\r\n\r\nexport function disableMapInteraction(map) {\r\n    if (!map) return;\r\n    map.dragPan.disable();\r\n    map.boxZoom.disable();\r\n    map.scrollZoom.disable();\r\n    map.dragRotate.disable();\r\n    map.doubleClickZoom.disable();\r\n    map.touchZoomRotate.disable();\r\n    map.touchPitch.disable();\r\n}\r\n","import { pause } from \"../utils/api-helpers\";\r\n\r\nexport class ZoneApi {\r\n    localStoragekey = \"mapZones\";\r\n\r\n    async getZoneList() {\r\n        await pause();\r\n        const zones = localStorage.getItem(this.localStoragekey);\r\n        if (!zones) return;\r\n        return JSON.parse(zones);\r\n    }\r\n\r\n    async addZone(zone) {\r\n        await pause();\r\n        let newZones = [];\r\n        const zones = await this.getZoneList();\r\n        if (zones) newZones = [...zones];\r\n        newZones.push(zone);\r\n        const string = JSON.stringify(newZones);\r\n        localStorage.setItem(this.localStoragekey, string);\r\n    }\r\n\r\n    async updateZone(zone) {\r\n        await pause();\r\n        const zones = await this.getZoneList();\r\n        if (!zones) return;\r\n        const newZones = zones.map((el) => {\r\n            if (el.id === zone.id) return zone;\r\n            return el;\r\n        });\r\n        const string = JSON.stringify(newZones);\r\n        localStorage.setItem(this.localStoragekey, string);\r\n    }\r\n\r\n    async deleteZone(id) {\r\n        await pause();\r\n        const zones = await this.getZoneList();\r\n        if (!zones) return;\r\n        const newZones = zones.filter((el) => el.id !== id);\r\n        const string = JSON.stringify(newZones);\r\n        localStorage.setItem(this.localStoragekey, string);\r\n    }\r\n}\r\n","import mapboxgl from \"mapbox-gl\";\r\nimport _ from \"lodash\";\r\nimport { ZoneLayer } from \"../layers/zone-layer\";\r\nimport { generateUniqueId, getDefaultZone, getCenterZoneCoorByCoordinates } from \"../utils/zone-helpers\";\r\nimport { getPlusIconSvg, getEditIconSvg, getDeleteIconSvg } from \"../utils/svg-helpers\";\r\nimport { enableMapInteraction, disableMapInteraction } from \"../utils/map-helpers\";\r\nimport { CONTROL_BASE_CLASS_NAME, POPUP_BASE_CLASS_NAME, POPUP_CONTROLS_CLASS_NAME } from \"../utils/constants\";\r\nimport {\r\n    createControllButton,\r\n    removeActiveClassForButton,\r\n    addActiveClassForButton,\r\n    addElementListener,\r\n    getPopupInputColor,\r\n    getPopupButton,\r\n    getPopupTitle,\r\n    getPopupInputName,\r\n} from \"../utils/dom-helpers\";\r\nimport { ZoneApi } from \"../api/zone-api\";\r\n\r\nexport class AdminControll {\r\n    isCreateMode = false;\r\n    isEditMode = false;\r\n    isDeleteMode = false;\r\n    deleteZoneId = null;\r\n    editZoneId = null;\r\n    cacheZone = null;\r\n    newZone = getDefaultZone();\r\n\r\n    /** ID for elements */\r\n    popupCreateId = `${CONTROL_BASE_CLASS_NAME}__popup-create`;\r\n    popupCreateInputNameId = `${this.popupCreateId}-input-name`;\r\n    popupCreateInputColorId = `${this.popupCreateId}-input-color`;\r\n    popupCreateButtonSaveId = `${this.popupCreateId}-button-save`;\r\n    popupCreateButtonCancelId = `${this.popupCreateId}-button-cancel`;\r\n\r\n    popupDeleteId = `${CONTROL_BASE_CLASS_NAME}__popup-delete`;\r\n    popupDeleteButtonConfirmId = `${this.popupDeleteId}-button-confirm`;\r\n    popupDeleteButtonCancelId = `${this.popupDeleteId}-button-cancel`;\r\n\r\n    popupEditId = `${CONTROL_BASE_CLASS_NAME}__popup-edit`;\r\n    popupEditInputNameId = `${this.popupEditId}-input-name`;\r\n    popupEditInputColorId = `${this.popupEditId}-input-color`;\r\n    popupEditButtonSaveId = `${this.popupEditId}-button-save`;\r\n    popupEditButtonCancelId = `${this.popupEditId}-button-cancel`;\r\n    popupEditButtonGeometryId = `${this.popupEditId}-button-geometry`;\r\n\r\n    /** Patterns */\r\n    zoneLayerPatternId = /zone-layer-\\w/i;\r\n\r\n    /**\r\n     *\r\n     * @param {ZoneControll} zoneControll\r\n     */\r\n    constructor(zoneControll) {\r\n        this.zoneControll = zoneControll;\r\n        this.zoneApi = new ZoneApi();\r\n    }\r\n\r\n    /**\r\n     * @param {mapboxgl.Map} map\r\n     */\r\n    onAdd(map) {\r\n        this.map = map;\r\n        this.container = document.createElement(\"div\");\r\n        this.container.className = \"mapboxgl-ctrl mapboxgl-ctrl-group\";\r\n        this.createButton = createControllButton(getPlusIconSvg(), this.onClickCreateButton);\r\n        this.deleteButton = createControllButton(getDeleteIconSvg(), this.onClickDeleteButton);\r\n        this.editButton = createControllButton(getEditIconSvg(), this.onClickEditButton);\r\n        this.container.appendChild(this.createButton);\r\n        this.container.appendChild(this.deleteButton);\r\n        this.container.appendChild(this.editButton);\r\n        return this.container;\r\n    }\r\n\r\n    onRemove() {\r\n        this.container.parentNode.removeChild(this.container);\r\n        this.disableAllModes();\r\n        this.map = undefined;\r\n    }\r\n\r\n    //#region Edit zone\r\n\r\n    onClickEditButton = () => {\r\n        if (this.isEditMode) return this.disableEditMode();\r\n        this.disableAllModes();\r\n        this.enableEditMode();\r\n    };\r\n\r\n    addEditPopupListeners() {\r\n        addElementListener(this.popupEditInputNameId, \"change\", this.editZoneName);\r\n        addElementListener(this.popupEditInputColorId, \"change\", this.editZoneColor);\r\n        addElementListener(this.popupEditButtonSaveId, \"click\", this.onSaveEdit);\r\n        addElementListener(this.popupEditButtonCancelId, \"click\", this.cancelEditZone);\r\n        addElementListener(this.popupEditButtonGeometryId, \"click\", this.onGeometryEdit);\r\n    }\r\n\r\n    updateEditZoneLayer() {\r\n        if (!this.editZone || this.editZone.coordinates.length < 4) return;\r\n        this.zoneControll.updateZoneCoordinates(this.editZone.id, this.editZone.coordinates);\r\n    }\r\n\r\n    /**\r\n     * @param {mapboxgl.MapMouseEvent & mapboxgl.EventData} e\r\n     */\r\n    onMouseUpEdit = (e) => {\r\n        this.map.off(\"mousemove\", this.onMouseMoveEdit);\r\n        if (this.editZone) this.showEditPopup(this.editZone.id);\r\n        enableMapInteraction(this.map);\r\n    };\r\n\r\n    /**\r\n     * @param {mapboxgl.MapMouseEvent & mapboxgl.EventData} e\r\n     */\r\n    onMouseMoveEdit = (e) => {\r\n        if (!this.editZone) return;\r\n        this.editZone.coordinates.push(e.lngLat.toArray());\r\n        this.updateEditZoneLayer();\r\n    };\r\n\r\n    /**\r\n     * @param {mapboxgl.MapMouseEvent & mapboxgl.EventData} e\r\n     */\r\n    onMouseDownEdit = (e) => {\r\n        this.map.on(\"mousemove\", this.onMouseMoveEdit);\r\n        this.map.once(\"mouseup\", this.onMouseUpEdit);\r\n    };\r\n\r\n    onGeometryEdit = () => {\r\n        if (this.editPopup) this.editPopup.remove();\r\n        disableMapInteraction(this.map);\r\n        this.zoneControll.removeZoneLayer(this.editZone.id);\r\n        this.editZone.coordinates = [];\r\n        this.map.on(\"mousedown\", this.onMouseDownEdit);\r\n    };\r\n\r\n    cancelEditZone = () => {\r\n        this.zoneControll.drawZones();\r\n        if (this.editPopup) this.editPopup.remove();\r\n        this.editZone = null;\r\n    };\r\n\r\n    onSaveEdit = async () => {\r\n        await this.zoneControll.updateZone(this.editZone);\r\n\r\n        if (this.editPopup) this.editPopup.remove();\r\n        this.editZone = null;\r\n    };\r\n\r\n    editZoneColor = (e) => {\r\n        const color = e.target.value;\r\n        this.editZone.color = color;\r\n        this.zoneControll.updateZoneColor(this.editZone.id, color);\r\n    };\r\n\r\n    editZoneName = (e) => {\r\n        this.editZone.name = e.target.value;\r\n    };\r\n\r\n    getEditPopupContent({ name, color }) {\r\n        return `\r\n            <div class=\"${POPUP_BASE_CLASS_NAME}\">\r\n                ${getPopupInputName(name, this.popupEditInputNameId)}\r\n                ${getPopupInputColor(color, this.popupEditInputColorId)}\r\n                ${getPopupButton(\"Edit Geometry\", this.popupEditButtonGeometryId)}\r\n                <div class=\"${POPUP_CONTROLS_CLASS_NAME}\">\r\n                ${getPopupButton(\"Cancel\", this.popupEditButtonCancelId)}\r\n                ${getPopupButton(\"Save\", this.popupEditButtonSaveId)}\r\n                </div>\r\n            </div>`;\r\n    }\r\n\r\n    showEditPopup() {\r\n        const coor = getCenterZoneCoorByCoordinates(this.editZone.coordinates);\r\n        if (!coor) return;\r\n        this.editPopup = new mapboxgl.Popup({\r\n            closeButton: false,\r\n            closeOnClick: false,\r\n            closeOnMove: false,\r\n        })\r\n            .setLngLat(coor)\r\n            .setHTML(this.getEditPopupContent(this.editZone))\r\n            .addTo(this.map);\r\n        this.addEditPopupListeners();\r\n    }\r\n\r\n    onClickEdit = (e) => {\r\n        const feature = this.getZoneFeatureByEvent(e);\r\n        if (!feature) return;\r\n        const zoneId = feature.properties.id;\r\n        if (this.editZone && zoneId === this.editZone.id) return;\r\n        if (this.editPopup) this.editPopup.remove();\r\n        const zone = this.zoneControll.getZoneById(zoneId);\r\n        this.editZone = _.cloneDeep(zone);\r\n        this.showEditPopup();\r\n    };\r\n\r\n    enableEditMode = () => {\r\n        addActiveClassForButton(this.editButton);\r\n        this.addCursorPointerListener();\r\n        this.map.on(\"click\", this.onClickEdit);\r\n        this.isEditMode = true;\r\n    };\r\n\r\n    disableEditMode = () => {\r\n        removeActiveClassForButton(this.editButton);\r\n        this.removeCursorPointerListener();\r\n        this.map.off(\"click\", this.onClickEdit);\r\n        this.cancelEditZone();\r\n        this.editZone = null;\r\n        this.isEditMode = false;\r\n    };\r\n\r\n    //#endregion\r\n\r\n    //#region Create zone\r\n\r\n    onClickCreateButton = () => {\r\n        if (this.isCreateMode) return this.disableCreateMode();\r\n        this.disableAllModes();\r\n        this.enableCreateMode();\r\n    };\r\n\r\n    enableCreateMode() {\r\n        this.newZone = getDefaultZone();\r\n        const id = generateUniqueId();\r\n        this.newZone.id = id;\r\n        this.newZonelayer = new ZoneLayer(this.map, id);\r\n        this.map.once(\"mousedown\", this.onMouseDownCreate);\r\n        addActiveClassForButton(this.createButton);\r\n        disableMapInteraction(this.map);\r\n        this.isCreateMode = true;\r\n    }\r\n\r\n    disableCreateMode = () => {\r\n        this.newZone = getDefaultZone();\r\n        if (this.createPopup) this.createPopup.remove();\r\n        if (this.newZonelayer) this.newZonelayer.remove();\r\n        removeActiveClassForButton(this.createButton);\r\n        enableMapInteraction(this.map);\r\n        this.isCreateMode = false;\r\n    };\r\n\r\n    showCreatePopup() {\r\n        const coor = getCenterZoneCoorByCoordinates(this.newZone.coordinates);\r\n\r\n        if (!coor) return;\r\n\r\n        this.createPopup = new mapboxgl.Popup({\r\n            closeButton: false,\r\n            closeOnClick: false,\r\n            closeOnMove: false,\r\n        })\r\n            .setLngLat(coor)\r\n            .setHTML(this.getCreatePopupContent())\r\n            .addTo(this.map);\r\n        this.addCreatePopupListners();\r\n    }\r\n\r\n    setNewZoneName = (e) => {\r\n        this.newZone.name = e.target.value;\r\n    };\r\n\r\n    setNewZoneColor = (e) => {\r\n        this.newZone.color = e.target.value;\r\n        this.updateColorInNewZone();\r\n    };\r\n\r\n    addCreatePopupListners() {\r\n        addElementListener(this.popupCreateInputNameId, \"change\", this.setNewZoneName);\r\n        addElementListener(this.popupCreateInputColorId, \"change\", this.setNewZoneColor);\r\n        addElementListener(this.popupCreateButtonCancelId, \"click\", this.disableCreateMode);\r\n        addElementListener(this.popupCreateButtonSaveId, \"click\", this.createZone);\r\n    }\r\n\r\n    createZone = () => {\r\n        const zone = _.cloneDeep(this.newZone);\r\n        this.zoneControll.createZone(zone);\r\n        this.onClickCreateButton();\r\n        this.createPopup.remove();\r\n        this.newZonelayer.remove();\r\n        this.newZone = getDefaultZone();\r\n    };\r\n\r\n    updateColorInNewZone() {\r\n        this.newZonelayer.setColor(this.newZone.color);\r\n    }\r\n\r\n    getCreatePopupContent() {\r\n        const name = this.zoneControll.getNewZoneName();\r\n        this.newZone.name = name;\r\n        return `\r\n            <div class=${POPUP_BASE_CLASS_NAME}>\r\n                ${getPopupInputName(name, this.popupCreateInputNameId)}\r\n                ${getPopupInputColor(null, this.popupCreateInputColorId)}\r\n                <div class=\"${POPUP_CONTROLS_CLASS_NAME}\">\r\n                ${getPopupButton(\"Cancel\", this.popupCreateButtonCancelId)}\r\n                ${getPopupButton(\"Save\", this.popupCreateButtonSaveId)}\r\n                </div>\r\n            </div>`;\r\n    }\r\n\r\n    updateNewZoneLayer() {\r\n        if (this.newZone.coordinates.length < 4) return;\r\n        this.newZonelayer.update(this.newZone.coordinates, true);\r\n    }\r\n\r\n    /**\r\n     * @param {mapboxgl.MapMouseEvent & mapboxgl.EventData} e\r\n     */\r\n    onMouseUpCreate = (e) => {\r\n        this.map.off(\"mousemove\", this.onMouseMoveCreate);\r\n        this.showCreatePopup();\r\n    };\r\n\r\n    /**\r\n     * @param {mapboxgl.MapMouseEvent & mapboxgl.EventData} e\r\n     */\r\n    onMouseMoveCreate = (e) => {\r\n        this.newZone.coordinates.push(e.lngLat.toArray());\r\n        this.updateNewZoneLayer();\r\n    };\r\n\r\n    /**\r\n     * @param {mapboxgl.MapMouseEvent & mapboxgl.EventData} e\r\n     */\r\n    onMouseDownCreate = (e) => {\r\n        this.newZone.coordinates.push(e.lngLat.toArray());\r\n        this.map.on(\"mousemove\", this.onMouseMoveCreate);\r\n        this.map.once(\"mouseup\", this.onMouseUpCreate);\r\n    };\r\n\r\n    //#endregion\r\n\r\n    //#region Delete zone\r\n\r\n    getDeletePopupContent(zoneName) {\r\n        return `\r\n            <div class=${POPUP_BASE_CLASS_NAME}>\r\n                ${getPopupTitle(`Do you want to delete a zone ${zoneName}?`)}\r\n                <div class=\"${POPUP_CONTROLS_CLASS_NAME}\">\r\n                ${getPopupButton(\"Cancel\", this.popupDeleteButtonCancelId)}\r\n                ${getPopupButton(\"Delete\", this.popupDeleteButtonConfirmId)}\r\n                </div>\r\n            </div>`;\r\n    }\r\n\r\n    addDeletePopupListeners(zoneId) {\r\n        addElementListener(this.popupDeleteButtonConfirmId, \"click\", () => this.deleteZone(zoneId));\r\n        addElementListener(this.popupDeleteButtonCancelId, \"click\", this.cancelDeleteZone);\r\n    }\r\n\r\n    cancelDeleteZone = () => {\r\n        this.deletePopup.remove();\r\n        this.deleteZoneId = null;\r\n    };\r\n\r\n    deleteZone = async (zoneId) => {\r\n        await this.zoneControll.deleteZone(zoneId);\r\n        this.deletePopup.remove();\r\n    };\r\n\r\n    showDeletePopup(zoneId) {\r\n        const zone = this.zoneControll.getZoneById(zoneId);\r\n\r\n        if (!zone) return;\r\n\r\n        const coor = getCenterZoneCoorByCoordinates(zone.coordinates);\r\n\r\n        if (!coor) return;\r\n\r\n        this.deletePopup = new mapboxgl.Popup({\r\n            closeButton: false,\r\n            closeOnClick: false,\r\n            closeOnMove: false,\r\n        })\r\n            .setLngLat(coor)\r\n            .setHTML(this.getDeletePopupContent(zone.name))\r\n            .addTo(this.map);\r\n        this.addDeletePopupListeners(zone.id);\r\n    }\r\n\r\n    onClickDeleteZone = (e) => {\r\n        const feature = this.getZoneFeatureByEvent(e);\r\n        if (!feature) return;\r\n        const zoneId = feature.properties.id;\r\n        if (zoneId === this.deleteZoneId) return;\r\n        if (this.deletePopup) this.deletePopup.remove();\r\n        this.showDeletePopup(zoneId);\r\n        this.deleteZoneId = zoneId;\r\n    };\r\n\r\n    enableDeletetingMode() {\r\n        this.map.on(\"click\", this.onClickDeleteZone);\r\n        addActiveClassForButton(this.deleteButton);\r\n        this.addCursorPointerListener();\r\n        this.isDeleteMode = true;\r\n    }\r\n\r\n    disableDeleteMode() {\r\n        this.map.off(\"click\", this.onClickDeleteZone);\r\n        removeActiveClassForButton(this.deleteButton);\r\n\r\n        if (this.deletePopup) {\r\n            this.deletePopup.remove();\r\n            this.deletePopup = null;\r\n        }\r\n\r\n        this.removeCursorPointerListener();\r\n        this.isDeleteMode = false;\r\n        this.deleteZoneId = null;\r\n    }\r\n\r\n    onClickDeleteButton = () => {\r\n        if (this.isDeleteMode) return this.disableDeleteMode();\r\n        this.disableAllModes();\r\n        this.enableDeletetingMode();\r\n    };\r\n\r\n    //#endregion\r\n\r\n    //#region Utils\r\n\r\n    cursorListener = (e) => {\r\n        const feature = this.getZoneFeatureByEvent(e);\r\n        if (feature) {\r\n            this.map.getCanvas().style.cursor = \"pointer\";\r\n        } else {\r\n            this.map.getCanvas().style.cursor = \"\";\r\n        }\r\n    };\r\n\r\n    addCursorPointerListener() {\r\n        this.map.on(\"mousemove\", this.cursorListener);\r\n    }\r\n\r\n    removeCursorPointerListener() {\r\n        this.map.off(\"mousemove\", this.cursorListener);\r\n    }\r\n\r\n    disableAllModes() {\r\n        if (this.isEditMode) this.disableEditMode();\r\n        if (this.isDeleteMode) this.disableDeleteMode();\r\n        if (this.isCreateMode) this.disableCreateMode();\r\n    }\r\n\r\n    getZoneFeatureByEvent(e) {\r\n        const features = this.map.queryRenderedFeatures(e.point);\r\n        if (!features.length) return;\r\n        const feature = features.shift();\r\n        if (!feature) return;\r\n        if (feature.layer.id.match(this.zoneLayerPatternId)) return feature;\r\n    }\r\n\r\n    //#endregion\r\n}\r\n","export function getDeleteIconSvg() {\r\n    return `\r\n\t<svg version=\"1.1\" viewBox=\"0 0 384 384\">\r\n\t\t<path\r\n\t\td=\"M64,341.333C64,364.907,83.093,384,106.667,384h170.667C300.907,384,320,364.907,320,341.333v-256H64V341.333z\" />\r\n\t\t<polygon\r\n\t\tpoints=\"266.667,21.333 245.333,0 138.667,0 117.333,21.333 42.667,21.333 42.667,64 341.333,64 341.333,21.333 \t\t\t\" />\r\n\t</svg>\r\n\t`;\r\n}\r\n\r\nexport function getEditIconSvg() {\r\n    return `\r\n\t<svg version=\"1.1\" viewBox=\"0 0 383.947 383.947\">\r\n\t\t<polygon points=\"0,303.947 0,383.947 80,383.947 316.053,147.893 236.053,67.893\" />\r\n\t\t<path\r\n\t\td=\"M377.707,56.053L327.893,6.24c-8.32-8.32-21.867-8.32-30.187,0l-39.04,39.04l80,80l39.04-39.04C386.027,77.92,386.027,64.373,377.707,56.053z\" />\r\n\t</svg>\r\n\t`;\r\n}\r\n\r\nexport function getPlusIconSvg() {\r\n    return `\r\n\t<svg version=\"1.1\" viewBox=\"0 0 42 42\">\r\n\t\t<path d=\"M37.059,16H26V4.941C26,2.224,23.718,0,21,0s-5,2.224-5,4.941V16H4.941C2.224,16,0,18.282,0,21s2.224,5,4.941,5H16v11.059\r\n\t\tC16,39.776,18.282,42,21,42s5-2.224,5-4.941V26h11.059C39.776,26,42,23.718,42,21S39.776,16,37.059,16z\" />\r\n\t</svg>\r\n\t`;\r\n}\r\n","import { ZoneApi } from \"../api/zone-api\";\r\nimport { ZoneLayer } from \"../layers/zone-layer\";\r\n\r\nexport class ZoneControll {\r\n    zones = [];\r\n    zoneApi = new ZoneApi();\r\n    layers = new Map();\r\n\r\n    /**\r\n     * @param {mapboxgl.Map} map\r\n     */\r\n    onAdd(map) {\r\n        this.map = map;\r\n        this.container = document.createElement(\"div\");\r\n        this.container.className = \"mapboxgl-ctrl\";\r\n        map.on(\"load\", this.init);\r\n        return this.container;\r\n    }\r\n\r\n    onRemove() {\r\n        this.container.parentNode.removeChild(this.container);\r\n        this.map = undefined;\r\n    }\r\n\r\n    init = async () => {\r\n        const zones = await this.zoneApi.getZoneList();\r\n        if (!zones) return;\r\n        this.zones = zones;\r\n        this.drawZones();\r\n    };\r\n\r\n    async deleteZone(zoneId) {\r\n        await this.zoneApi.deleteZone(zoneId);\r\n        this.zones = this.zones.filter((zone) => zone.id !== zoneId);\r\n        const layer = this.layers.get(zoneId);\r\n        if (!layer) return;\r\n        layer.remove();\r\n        this.layers.delete(zoneId);\r\n    }\r\n\r\n    async updateZone(newZone) {\r\n        await this.zoneApi.updateZone(newZone);\r\n\r\n        this.zones = this.zones.map((el) => {\r\n            if (el.id === newZone.id) return newZone;\r\n            return el;\r\n        });\r\n\r\n        this.drawZones();\r\n    }\r\n\r\n    async createZone(newZone) {\r\n        await this.zoneApi.addZone(newZone);\r\n        this.zones.push(newZone);\r\n        this.drawZones();\r\n    }\r\n\r\n    getZoneList() {\r\n        return this.zones;\r\n    }\r\n\r\n    getZoneById(zoneId) {\r\n        return this.zones.find((el) => el.id === zoneId);\r\n    }\r\n\r\n    updateZoneColor(zoneId, color) {\r\n        const layer = this.layers.get(zoneId);\r\n        if (!layer) return;\r\n        layer.setColor(color);\r\n    }\r\n\r\n    updateZoneCoordinates(zoneId, coordinates) {\r\n        const layer = this.layers.get(zoneId);\r\n        if (!layer) return;\r\n        layer.update(coordinates, true);\r\n    }\r\n\r\n    removeZoneLayer(zoneId) {\r\n        const layer = this.layers.get(zoneId);\r\n        if (layer) layer.remove();\r\n    }\r\n\r\n    getNewZoneName() {\r\n        return `Zone ${this.zones.length + 1}`;\r\n    }\r\n\r\n    drawZones() {\r\n        this.zones.forEach((zone) => {\r\n            const existLayer = this.layers.get(zone.id);\r\n            if (existLayer) {\r\n                existLayer.update(zone.coordinates);\r\n                existLayer.setColor(zone.color);\r\n                existLayer.updateName(zone.name);\r\n            } else {\r\n                const layer = new ZoneLayer(this.map, zone.id, { color: zone.color, name: zone.name });\r\n                layer.update(zone.coordinates);\r\n                this.layers.set(zone.id, layer);\r\n            }\r\n        });\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport mapboxgl from \"mapbox-gl\";\r\nimport { UserControll } from \"./controls/user-controll\";\r\nimport { AdminControll } from \"./controls/admin-controll\";\r\nimport \"mapbox-gl/dist/mapbox-gl.css\";\r\nimport \"./index.scss\";\r\nimport { ZoneControll } from \"./controls/zone-controll\";\r\nimport { MAP_ID } from \"./utils/constants\";\r\n\r\nexport const Cities = {\r\n    Bengaluru: new mapboxgl.LngLat(77.59094323372614, 12.975557791300176),\r\n};\r\n\r\n/**\r\n * @typedef {object} Props\r\n * @prop {string} mapStyle\r\n * @prop {string} mapToken\r\n * @prop {boolean} isAdmin\r\n * @prop {mapboxgl.LngLat} cityCoor\r\n *\r\n * @extends {React.Component<Props>}\r\n */\r\nexport class MapWithZones extends React.Component {\r\n    componentDidMount() {\r\n        const { mapStyle, mapToken, isAdmin, cityCoor } = this.props;\r\n\r\n        mapboxgl.accessToken = mapToken;\r\n        const style = mapStyle || \"mapbox://styles/mapbox/streets-v11\";\r\n\r\n        this.map = new mapboxgl.Map({\r\n            container: MAP_ID,\r\n            style,\r\n            center: cityCoor,\r\n            zoom: 12,\r\n        });\r\n\r\n        this.zoneControll = new ZoneControll();\r\n        this.map.addControl(this.zoneControll);\r\n        this.userControll = new UserControll(this.zoneControll);\r\n        this.adminControll = new AdminControll(this.zoneControll);\r\n\r\n        if (isAdmin) {\r\n            this.map.addControl(this.adminControll);\r\n        } else {\r\n            this.map.addControl(this.userControll);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { isAdmin } = this.props;\r\n\r\n        if (isAdmin !== prevProps.isAdmin) {\r\n            if (!this.map) return;\r\n            if (isAdmin) {\r\n                this.map.removeControl(this.userControll);\r\n                this.map.addControl(this.adminControll);\r\n            } else {\r\n                this.map.removeControl(this.adminControll);\r\n                this.map.addControl(this.userControll);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <div id={MAP_ID} />;\r\n    }\r\n}\r\n","import React, { useState } from \"react\";\nimport { MapWithZones, Cities } from \"./map-with-zones\";\nimport \"./App.scss\";\n\nconst App = () => {\n    const [isAdmin, setIsAdmin] = useState(true);\n\n    return (\n        <div className=\"App\">\n            <div className=\"test-panel\">\n                <button onClick={() => setIsAdmin(true)} className={isAdmin ? \"test-panel__button-active\" : \"\"}>\n                    ADMIN MODE\n                </button>\n                <button onClick={() => setIsAdmin(false)} className={!isAdmin ? \"test-panel__button-active\" : \"\"}>\n                    USER MODE\n                </button>\n            </div>\n            <MapWithZones mapToken={process.env.REACT_APP_MAPBOX_TOKEN} cityCoor={Cities.Bengaluru} isAdmin={isAdmin} />\n        </div>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}